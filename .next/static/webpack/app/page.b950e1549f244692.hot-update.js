"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/baseline.ts":
/*!*****************************!*\
  !*** ./src/lib/baseline.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildHierarchy: () => (/* binding */ buildHierarchy),\n/* harmony export */   colorForBaseline: () => (/* binding */ colorForBaseline),\n/* harmony export */   getAllFeatures: () => (/* binding */ getAllFeatures),\n/* harmony export */   labelForBaseline: () => (/* binding */ labelForBaseline)\n/* harmony export */ });\n/* harmony import */ var web_features_data_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web-features/data.json */ \"(app-pages-browser)/./node_modules/web-features/data.json\");\n\nconst { features: featureMap, groups: groupMap } = web_features_data_json__WEBPACK_IMPORTED_MODULE_0__;\n/**\r\n * Transform web-features data into normalized feature nodes\r\n * Adds consistent baseline mapping for our UI components\r\n */ function getAllFeatures() {\n    return Object.entries(featureMap).map((param)=>{\n        let [id, featureData] = param;\n        var _typedFeature_status, _typedFeature_compat, _typedFeature_status1, _typedFeature_status2, _typedFeature_status3;\n        const typedFeature = featureData;\n        var _typedFeature_status_baseline;\n        const rawBaseline = (_typedFeature_status_baseline = (_typedFeature_status = typedFeature.status) === null || _typedFeature_status === void 0 ? void 0 : _typedFeature_status.baseline) !== null && _typedFeature_status_baseline !== void 0 ? _typedFeature_status_baseline : false;\n        let normalizedBaseline = false;\n        // Normalize baseline to our standard levels\n        if (rawBaseline === 'high' || rawBaseline === true) {\n            normalizedBaseline = 'high';\n        } else if (rawBaseline === 'low') {\n            normalizedBaseline = 'low';\n        } else {\n            normalizedBaseline = false;\n        }\n        return {\n            id,\n            name: typedFeature.name || id,\n            description: typedFeature.description || '',\n            group: Array.isArray(typedFeature.group) ? typedFeature.group[0] : typedFeature.group || extractGroupFromFeature(id),\n            spec: Array.isArray(typedFeature.spec) ? typedFeature.spec[0] : typedFeature.spec,\n            caniuse: (_typedFeature_compat = typedFeature.compat) === null || _typedFeature_compat === void 0 ? void 0 : _typedFeature_compat.caniuse,\n            baseline: normalizedBaseline,\n            baseline_low_date: (_typedFeature_status1 = typedFeature.status) === null || _typedFeature_status1 === void 0 ? void 0 : _typedFeature_status1.baseline_low_date,\n            baseline_high_date: (_typedFeature_status2 = typedFeature.status) === null || _typedFeature_status2 === void 0 ? void 0 : _typedFeature_status2.baseline_high_date,\n            support: (_typedFeature_status3 = typedFeature.status) === null || _typedFeature_status3 === void 0 ? void 0 : _typedFeature_status3.support\n        };\n    });\n}\n/**\r\n * Build a hierarchical structure of features and groups for map visualization\r\n * Filters features by IDs if provided, otherwise returns all features\r\n */ function buildHierarchy(filteredIds) {\n    // Create group nodes from web-features data\n    const groups = {};\n    Object.entries(groupMap).forEach((param)=>{\n        let [id, groupData] = param;\n        const typedGroup = groupData;\n        groups[id] = {\n            id,\n            name: typedGroup.name || id,\n            parent: typedGroup.parent,\n            children: []\n        };\n    });\n    // Helper: get top-level groups without parents\n    function getRootGroups() {\n        return Object.values(groups).filter((group)=>!group.parent);\n    }\n    // Create parent-child relationships between groups\n    Object.values(groups).forEach((group)=>{\n        if (group.parent && groups[group.parent]) {\n            groups[group.parent].children.push(group);\n        }\n    });\n    // Create fallback group for baseline features\n    const baselineId = 'baseline';\n    if (!groups[baselineId]) {\n        groups[baselineId] = {\n            id: baselineId,\n            name: 'Baseline Features',\n            children: []\n        };\n    }\n    // Process each feature and attach to appropriate group\n    Object.entries(featureMap).forEach((param)=>{\n        let [featureId, featureData] = param;\n        var _typedFeature_status, _typedFeature_compat, _typedFeature_status1, _typedFeature_status2, _typedFeature_status3;\n        if (filteredIds && !filteredIds.has(featureId)) return;\n        // Normalize baseline level consistently\n        const typedFeature = featureData;\n        var _typedFeature_status_baseline;\n        const rawBaseline = (_typedFeature_status_baseline = (_typedFeature_status = typedFeature.status) === null || _typedFeature_status === void 0 ? void 0 : _typedFeature_status.baseline) !== null && _typedFeature_status_baseline !== void 0 ? _typedFeature_status_baseline : false;\n        let normalizedBaseline = false;\n        if (rawBaseline === 'high' || rawBaseline === true) {\n            normalizedBaseline = 'high';\n        } else if (rawBaseline === 'low') {\n            normalizedBaseline = 'low';\n        }\n        const leaf = {\n            type: 'feature',\n            data: {\n                id: featureId,\n                name: typedFeature.name || featureId,\n                description: typedFeature.description || '',\n                group: Array.isArray(typedFeature.group) ? typedFeature.group[0] : typedFeature.group || extractGroupFromFeature(featureId),\n                spec: Array.isArray(typedFeature.spec) ? typedFeature.spec[0] : typedFeature.spec,\n                caniuse: (_typedFeature_compat = typedFeature.compat) === null || _typedFeature_compat === void 0 ? void 0 : _typedFeature_compat.caniuse,\n                baseline: normalizedBaseline,\n                baseline_low_date: (_typedFeature_status1 = typedFeature.status) === null || _typedFeature_status1 === void 0 ? void 0 : _typedFeature_status1.baseline_low_date,\n                baseline_high_date: (_typedFeature_status2 = typedFeature.status) === null || _typedFeature_status2 === void 0 ? void 0 : _typedFeature_status2.baseline_high_date,\n                support: (_typedFeature_status3 = typedFeature.status) === null || _typedFeature_status3 === void 0 ? void 0 : _typedFeature_status3.support\n            }\n        };\n        var _leaf_data_group;\n        // Attach feature to its corresponding group or baseline\n        const groupId = (_leaf_data_group = leaf.data.group) !== null && _leaf_data_group !== void 0 ? _leaf_data_group : baselineId;\n        var _groups_groupId;\n        const targetGroup = (_groups_groupId = groups[groupId]) !== null && _groups_groupId !== void 0 ? _groups_groupId : groups[baselineId];\n        targetGroup.children.push(leaf);\n    });\n    // Filter out empty groups and return top-level structure\n    const populatedRootGroups = getRootGroups().filter((group)=>group.children.length > 0);\n    return {\n        name: 'Web Platform',\n        children: populatedRootGroups\n    };\n}\n/**\r\n * Extract category group from feature ID based on common patterns\r\n */ function extractGroupFromFeature(featureId) {\n    if (featureId.startsWith('css-')) return 'css';\n    if (featureId.startsWith('js-')) return 'javascript';\n    if (featureId.startsWith('html-')) return 'html';\n    if (featureId.startsWith('api-')) return 'api';\n    if (featureId.startsWith('security-')) return 'security';\n    return 'baseline';\n}\nfunction colorForBaseline(level) {\n    if (level === 'high') return '#22c55e'; // green\n    if (level === 'low') return '#3b82f6'; // blue\n    return '#B8860B'; // dark gold\n}\nfunction labelForBaseline(level) {\n    if (level === 'high') return 'Baseline: Widely available';\n    if (level === 'low') return 'Baseline: Newly available';\n    return 'Baseline: Limited availability';\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/baseline.ts\n"));

/***/ })

});