/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/unzipper";
exports.ids = ["vendor-chunks/unzipper"];
exports.modules = {

/***/ "(rsc)/./node_modules/unzipper/lib/Buffer.js":
/*!*********************************************!*\
  !*** ./node_modules/unzipper/lib/Buffer.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer);\n\n// Backwards compatibility for node versions < 8\nif (Buffer.from === undefined) {\n  Buffer.from = function (a, b, c) {\n    return new Buffer(a, b, c)\n  };\n\n  Buffer.alloc = Buffer.from;\n}\n\nmodule.exports = Buffer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL0J1ZmZlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG9EQUF3Qjs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXENraGFkYXJcXERvd25sb2Fkc1xcQUlfQmFzZWxpbmVfTWFwXFxub2RlX21vZHVsZXNcXHVuemlwcGVyXFxsaWJcXEJ1ZmZlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJykuQnVmZmVyO1xuXG4vLyBCYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBmb3Igbm9kZSB2ZXJzaW9ucyA8IDhcbmlmIChCdWZmZXIuZnJvbSA9PT0gdW5kZWZpbmVkKSB7XG4gIEJ1ZmZlci5mcm9tID0gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICByZXR1cm4gbmV3IEJ1ZmZlcihhLCBiLCBjKVxuICB9O1xuXG4gIEJ1ZmZlci5hbGxvYyA9IEJ1ZmZlci5mcm9tO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJ1ZmZlcjsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/Buffer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/BufferStream.js":
/*!***************************************************!*\
  !*** ./node_modules/unzipper/lib/BufferStream.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Promise = __webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\");\nvar Stream = __webpack_require__(/*! stream */ \"stream\");\nvar Buffer = __webpack_require__(/*! ./Buffer */ \"(rsc)/./node_modules/unzipper/lib/Buffer.js\");\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\");\n\nmodule.exports = function(entry) {\n  return new Promise(function(resolve,reject) {\n    var chunks = [];\n    var bufferStream = Stream.Transform()\n      .on('finish',function() {\n        resolve(Buffer.concat(chunks));\n      })\n      .on('error',reject);\n        \n    bufferStream._transform = function(d,e,cb) {\n      chunks.push(d);\n      cb();\n    };\n    entry.on('error',reject)\n      .pipe(bufferStream);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL0J1ZmZlclN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxjQUFjLG1CQUFPLENBQUMsc0VBQVU7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLHNCQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyw2REFBVTs7QUFFL0I7QUFDQTtBQUNBLFdBQVcsbUJBQU8sQ0FBQyx5RUFBaUI7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXENraGFkYXJcXERvd25sb2Fkc1xcQUlfQmFzZWxpbmVfTWFwXFxub2RlX21vZHVsZXNcXHVuemlwcGVyXFxsaWJcXEJ1ZmZlclN0cmVhbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG52YXIgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJyk7XG52YXIgQnVmZmVyID0gcmVxdWlyZSgnLi9CdWZmZXInKTtcblxuLy8gQmFja3dhcmRzIGNvbXBhdGliaWxpdHkgZm9yIG5vZGUgdmVyc2lvbnMgPCA4XG5pZiAoIVN0cmVhbS5Xcml0YWJsZSB8fCAhU3RyZWFtLldyaXRhYmxlLnByb3RvdHlwZS5kZXN0cm95KVxuICBTdHJlYW0gPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihlbnRyeSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3QpIHtcbiAgICB2YXIgY2h1bmtzID0gW107XG4gICAgdmFyIGJ1ZmZlclN0cmVhbSA9IFN0cmVhbS5UcmFuc2Zvcm0oKVxuICAgICAgLm9uKCdmaW5pc2gnLGZ1bmN0aW9uKCkge1xuICAgICAgICByZXNvbHZlKEJ1ZmZlci5jb25jYXQoY2h1bmtzKSk7XG4gICAgICB9KVxuICAgICAgLm9uKCdlcnJvcicscmVqZWN0KTtcbiAgICAgICAgXG4gICAgYnVmZmVyU3RyZWFtLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihkLGUsY2IpIHtcbiAgICAgIGNodW5rcy5wdXNoKGQpO1xuICAgICAgY2IoKTtcbiAgICB9O1xuICAgIGVudHJ5Lm9uKCdlcnJvcicscmVqZWN0KVxuICAgICAgLnBpcGUoYnVmZmVyU3RyZWFtKTtcbiAgfSk7XG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/BufferStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/Decrypt.js":
/*!**********************************************!*\
  !*** ./node_modules/unzipper/lib/Decrypt.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var bigInt = __webpack_require__(/*! big-integer */ \"(rsc)/./node_modules/big-integer/BigInteger.js\");\nvar Stream = __webpack_require__(/*! stream */ \"stream\");\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\");\n\nvar table;\n\nfunction generateTable() {\n  var poly = 0xEDB88320,c,n,k;\n  table = [];\n  for (n = 0; n < 256; n++) {\n    c = n;\n    for (k = 0; k < 8; k++)\n      c = (c & 1) ? poly ^ (c >>> 1) :  c = c >>> 1;\n    table[n] = c >>> 0;\n  }\n}\n\nfunction crc(ch,crc) {\n  if (!table)\n    generateTable();\n\n  if (ch.charCodeAt)\n    ch = ch.charCodeAt(0);        \n\n  return (bigInt(crc).shiftRight(8).and(0xffffff)).xor(table[bigInt(crc).xor(ch).and(0xff)]).value;\n}\n\nfunction Decrypt() {\n  if (!(this instanceof Decrypt))\n    return new Decrypt();\n\n  this.key0 = 305419896;\n  this.key1 = 591751049;\n  this.key2 = 878082192;\n}\n\nDecrypt.prototype.update = function(h) {            \n  this.key0 = crc(h,this.key0);\n  this.key1 = bigInt(this.key0).and(255).and(4294967295).add(this.key1)\n  this.key1 = bigInt(this.key1).multiply(134775813).add(1).and(4294967295).value;\n  this.key2 = crc(bigInt(this.key1).shiftRight(24).and(255), this.key2);\n}\n\n\nDecrypt.prototype.decryptByte = function(c) {\n  var k = bigInt(this.key2).or(2);\n  c = c ^ bigInt(k).multiply(bigInt(k^1)).shiftRight(8).and(255);\n  this.update(c);\n  return c;\n};\n\n Decrypt.prototype.stream = function() {\n  var stream = Stream.Transform(),\n      self = this;\n\n  stream._transform = function(d,e,cb) {\n    for (var i = 0; i<d.length;i++) {\n      d[i] = self.decryptByte(d[i]);\n    }\n    this.push(d);\n    cb();\n  };\n  return stream;\n};\n\n\n\n\nmodule.exports = Decrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL0RlY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLG1FQUFhO0FBQ2xDLGFBQWEsbUJBQU8sQ0FBQyxzQkFBUTs7QUFFN0I7QUFDQTtBQUNBLFdBQVcsbUJBQU8sQ0FBQyx5RUFBaUI7O0FBRXBDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixXQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXENraGFkYXJcXERvd25sb2Fkc1xcQUlfQmFzZWxpbmVfTWFwXFxub2RlX21vZHVsZXNcXHVuemlwcGVyXFxsaWJcXERlY3J5cHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJpZ0ludCA9IHJlcXVpcmUoJ2JpZy1pbnRlZ2VyJyk7XG52YXIgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJyk7XG5cbi8vIEJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGZvciBub2RlIHZlcnNpb25zIDwgOFxuaWYgKCFTdHJlYW0uV3JpdGFibGUgfHwgIVN0cmVhbS5Xcml0YWJsZS5wcm90b3R5cGUuZGVzdHJveSlcbiAgU3RyZWFtID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtJyk7XG5cbnZhciB0YWJsZTtcblxuZnVuY3Rpb24gZ2VuZXJhdGVUYWJsZSgpIHtcbiAgdmFyIHBvbHkgPSAweEVEQjg4MzIwLGMsbixrO1xuICB0YWJsZSA9IFtdO1xuICBmb3IgKG4gPSAwOyBuIDwgMjU2OyBuKyspIHtcbiAgICBjID0gbjtcbiAgICBmb3IgKGsgPSAwOyBrIDwgODsgaysrKVxuICAgICAgYyA9IChjICYgMSkgPyBwb2x5IF4gKGMgPj4+IDEpIDogIGMgPSBjID4+PiAxO1xuICAgIHRhYmxlW25dID0gYyA+Pj4gMDtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmMoY2gsY3JjKSB7XG4gIGlmICghdGFibGUpXG4gICAgZ2VuZXJhdGVUYWJsZSgpO1xuXG4gIGlmIChjaC5jaGFyQ29kZUF0KVxuICAgIGNoID0gY2guY2hhckNvZGVBdCgwKTsgICAgICAgIFxuXG4gIHJldHVybiAoYmlnSW50KGNyYykuc2hpZnRSaWdodCg4KS5hbmQoMHhmZmZmZmYpKS54b3IodGFibGVbYmlnSW50KGNyYykueG9yKGNoKS5hbmQoMHhmZildKS52YWx1ZTtcbn1cblxuZnVuY3Rpb24gRGVjcnlwdCgpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIERlY3J5cHQpKVxuICAgIHJldHVybiBuZXcgRGVjcnlwdCgpO1xuXG4gIHRoaXMua2V5MCA9IDMwNTQxOTg5NjtcbiAgdGhpcy5rZXkxID0gNTkxNzUxMDQ5O1xuICB0aGlzLmtleTIgPSA4NzgwODIxOTI7XG59XG5cbkRlY3J5cHQucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uKGgpIHsgICAgICAgICAgICBcbiAgdGhpcy5rZXkwID0gY3JjKGgsdGhpcy5rZXkwKTtcbiAgdGhpcy5rZXkxID0gYmlnSW50KHRoaXMua2V5MCkuYW5kKDI1NSkuYW5kKDQyOTQ5NjcyOTUpLmFkZCh0aGlzLmtleTEpXG4gIHRoaXMua2V5MSA9IGJpZ0ludCh0aGlzLmtleTEpLm11bHRpcGx5KDEzNDc3NTgxMykuYWRkKDEpLmFuZCg0Mjk0OTY3Mjk1KS52YWx1ZTtcbiAgdGhpcy5rZXkyID0gY3JjKGJpZ0ludCh0aGlzLmtleTEpLnNoaWZ0UmlnaHQoMjQpLmFuZCgyNTUpLCB0aGlzLmtleTIpO1xufVxuXG5cbkRlY3J5cHQucHJvdG90eXBlLmRlY3J5cHRCeXRlID0gZnVuY3Rpb24oYykge1xuICB2YXIgayA9IGJpZ0ludCh0aGlzLmtleTIpLm9yKDIpO1xuICBjID0gYyBeIGJpZ0ludChrKS5tdWx0aXBseShiaWdJbnQoa14xKSkuc2hpZnRSaWdodCg4KS5hbmQoMjU1KTtcbiAgdGhpcy51cGRhdGUoYyk7XG4gIHJldHVybiBjO1xufTtcblxuIERlY3J5cHQucHJvdG90eXBlLnN0cmVhbSA9IGZ1bmN0aW9uKCkge1xuICB2YXIgc3RyZWFtID0gU3RyZWFtLlRyYW5zZm9ybSgpLFxuICAgICAgc2VsZiA9IHRoaXM7XG5cbiAgc3RyZWFtLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihkLGUsY2IpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaTxkLmxlbmd0aDtpKyspIHtcbiAgICAgIGRbaV0gPSBzZWxmLmRlY3J5cHRCeXRlKGRbaV0pO1xuICAgIH1cbiAgICB0aGlzLnB1c2goZCk7XG4gICAgY2IoKTtcbiAgfTtcbiAgcmV0dXJuIHN0cmVhbTtcbn07XG5cblxuXG5cbm1vZHVsZS5leHBvcnRzID0gRGVjcnlwdDsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/Decrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/NoopStream.js":
/*!*************************************************!*\
  !*** ./node_modules/unzipper/lib/NoopStream.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Stream = __webpack_require__(/*! stream */ \"stream\");\nvar util = __webpack_require__(/*! util */ \"util\");\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\");\n\nfunction NoopStream() {\n  if (!(this instanceof NoopStream)) {\n    return new NoopStream();\n  }\n  Stream.Transform.call(this);\n}\n\nutil.inherits(NoopStream,Stream.Transform);\n\nNoopStream.prototype._transform = function(d,e,cb) { cb() ;};\n  \nmodule.exports = NoopStream;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL05vb3BTdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLHNCQUFRO0FBQzdCLFdBQVcsbUJBQU8sQ0FBQyxrQkFBTTs7QUFFekI7QUFDQTtBQUNBLFdBQVcsbUJBQU8sQ0FBQyx5RUFBaUI7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxxREFBcUQ7QUFDckQ7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxDa2hhZGFyXFxEb3dubG9hZHNcXEFJX0Jhc2VsaW5lX01hcFxcbm9kZV9tb2R1bGVzXFx1bnppcHBlclxcbGliXFxOb29wU3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBTdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKTtcbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuXG4vLyBCYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBmb3Igbm9kZSB2ZXJzaW9ucyA8IDhcbmlmICghU3RyZWFtLldyaXRhYmxlIHx8ICFTdHJlYW0uV3JpdGFibGUucHJvdG90eXBlLmRlc3Ryb3kpXG4gIFN0cmVhbSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbScpO1xuXG5mdW5jdGlvbiBOb29wU3RyZWFtKCkge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgTm9vcFN0cmVhbSkpIHtcbiAgICByZXR1cm4gbmV3IE5vb3BTdHJlYW0oKTtcbiAgfVxuICBTdHJlYW0uVHJhbnNmb3JtLmNhbGwodGhpcyk7XG59XG5cbnV0aWwuaW5oZXJpdHMoTm9vcFN0cmVhbSxTdHJlYW0uVHJhbnNmb3JtKTtcblxuTm9vcFN0cmVhbS5wcm90b3R5cGUuX3RyYW5zZm9ybSA9IGZ1bmN0aW9uKGQsZSxjYikgeyBjYigpIDt9O1xuICBcbm1vZHVsZS5leHBvcnRzID0gTm9vcFN0cmVhbTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/NoopStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/Open/directory.js":
/*!*****************************************************!*\
  !*** ./node_modules/unzipper/lib/Open/directory.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var binary = __webpack_require__(/*! binary */ \"(rsc)/./node_modules/binary/index.js\");\nvar PullStream = __webpack_require__(/*! ../PullStream */ \"(rsc)/./node_modules/unzipper/lib/PullStream.js\");\nvar unzip = __webpack_require__(/*! ./unzip */ \"(rsc)/./node_modules/unzipper/lib/Open/unzip.js\");\nvar Promise = __webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\");\nvar BufferStream = __webpack_require__(/*! ../BufferStream */ \"(rsc)/./node_modules/unzipper/lib/BufferStream.js\");\nvar parseExtraField = __webpack_require__(/*! ../parseExtraField */ \"(rsc)/./node_modules/unzipper/lib/parseExtraField.js\");\nvar Buffer = __webpack_require__(/*! ../Buffer */ \"(rsc)/./node_modules/unzipper/lib/Buffer.js\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar Writer = (__webpack_require__(/*! fstream */ \"(rsc)/./node_modules/fstream/fstream.js\").Writer);\nvar parseDateTime = __webpack_require__(/*! ../parseDateTime */ \"(rsc)/./node_modules/unzipper/lib/parseDateTime.js\");\n\nvar signature = Buffer.alloc(4);\nsignature.writeUInt32LE(0x06054b50,0);\n\nfunction getCrxHeader(source) {\n  var sourceStream = source.stream(0).pipe(PullStream());\n\n  return sourceStream.pull(4).then(function(data) {\n    var signature = data.readUInt32LE(0);\n    if (signature === 0x34327243) {\n      var crxHeader;\n      return sourceStream.pull(12).then(function(data) {\n        crxHeader = binary.parse(data)\n          .word32lu('version')\n          .word32lu('pubKeyLength')\n          .word32lu('signatureLength')\n          .vars;\n      }).then(function() {\n        return sourceStream.pull(crxHeader.pubKeyLength +crxHeader.signatureLength);\n      }).then(function(data) {\n        crxHeader.publicKey = data.slice(0,crxHeader.pubKeyLength);\n        crxHeader.signature = data.slice(crxHeader.pubKeyLength);\n        crxHeader.size = 16 + crxHeader.pubKeyLength +crxHeader.signatureLength;\n        return crxHeader;\n      });\n    }\n  });\n}\n\n// Zip64 File Format Notes: https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\nfunction getZip64CentralDirectory(source, zip64CDL) {\n  var d64loc = binary.parse(zip64CDL)\n    .word32lu('signature')\n    .word32lu('diskNumber')\n    .word64lu('offsetToStartOfCentralDirectory')\n    .word32lu('numberOfDisks')\n    .vars;\n\n  if (d64loc.signature != 0x07064b50) {\n    throw new Error('invalid zip64 end of central dir locator signature (0x07064b50): 0x' + d64loc.signature.toString(16));\n  }\n\n  var dir64 = PullStream();\n  source.stream(d64loc.offsetToStartOfCentralDirectory).pipe(dir64);\n\n  return dir64.pull(56)\n}\n\n// Zip64 File Format Notes: https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\nfunction parseZip64DirRecord (dir64record) {\n  var vars = binary.parse(dir64record)\n    .word32lu('signature')\n    .word64lu('sizeOfCentralDirectory')\n    .word16lu('version')\n    .word16lu('versionsNeededToExtract')\n    .word32lu('diskNumber')\n    .word32lu('diskStart')\n    .word64lu('numberOfRecordsOnDisk')\n    .word64lu('numberOfRecords')\n    .word64lu('sizeOfCentralDirectory')\n    .word64lu('offsetToStartOfCentralDirectory')\n    .vars;\n\n  if (vars.signature != 0x06064b50) {\n    throw new Error('invalid zip64 end of central dir locator signature (0x06064b50): 0x0' + vars.signature.toString(16));\n  }\n\n  return vars\n}\n\nmodule.exports = function centralDirectory(source, options) {\n  var endDir = PullStream(),\n      records = PullStream(),\n      tailSize = (options && options.tailSize) || 80,\n      sourceSize,\n      crxHeader,\n      startOffset,\n      vars;\n\n  if (options && options.crx)\n    crxHeader = getCrxHeader(source);\n\n  return source.size()\n    .then(function(size) {\n      sourceSize = size;\n\n      source.stream(Math.max(0,size-tailSize))\n        .on('error', function (error) { endDir.emit('error', error) })\n        .pipe(endDir);\n\n      return endDir.pull(signature);\n    })\n    .then(function() {\n      return Promise.props({directory: endDir.pull(22), crxHeader: crxHeader});\n    })\n    .then(function(d) {\n      var data = d.directory;\n      startOffset = d.crxHeader && d.crxHeader.size || 0;\n\n      vars = binary.parse(data)\n        .word32lu('signature')\n        .word16lu('diskNumber')\n        .word16lu('diskStart')\n        .word16lu('numberOfRecordsOnDisk')\n        .word16lu('numberOfRecords')\n        .word32lu('sizeOfCentralDirectory')\n        .word32lu('offsetToStartOfCentralDirectory')\n        .word16lu('commentLength')\n        .vars;\n\n      // Is this zip file using zip64 format? Use same check as Go:\n      // https://github.com/golang/go/blob/master/src/archive/zip/reader.go#L503\n      // For zip64 files, need to find zip64 central directory locator header to extract\n      // relative offset for zip64 central directory record.\n      if (vars.numberOfRecords == 0xffff|| vars.numberOfRecords == 0xffff ||\n        vars.offsetToStartOfCentralDirectory == 0xffffffff) {\n\n        // Offset to zip64 CDL is 20 bytes before normal CDR\n        const zip64CDLSize = 20\n        const zip64CDLOffset = sourceSize - (tailSize - endDir.match + zip64CDLSize)\n        const zip64CDLStream = PullStream();\n\n        source.stream(zip64CDLOffset).pipe(zip64CDLStream);\n\n        return zip64CDLStream.pull(zip64CDLSize)\n          .then(function (d) { return getZip64CentralDirectory(source, d) })\n          .then(function (dir64record) {\n            vars = parseZip64DirRecord(dir64record)\n          })\n      } else {\n        vars.offsetToStartOfCentralDirectory += startOffset;\n      }\n    })\n    .then(function() {\n      if (vars.commentLength) return endDir.pull(vars.commentLength).then(function(comment) {\n        vars.comment = comment.toString('utf8');\n      });\n    })\n    .then(function() {\n      source.stream(vars.offsetToStartOfCentralDirectory).pipe(records);\n\n      vars.extract = function(opts) {\n        if (!opts || !opts.path) throw new Error('PATH_MISSING');\n        // make sure path is normalized before using it\n        opts.path = path.resolve(path.normalize(opts.path));\n        return vars.files.then(function(files) {\n          return Promise.map(files, function(entry) {\n            if (entry.type == 'Directory') return;\n\n            // to avoid zip slip (writing outside of the destination), we resolve\n            // the target path, and make sure it's nested in the intended\n            // destination, or not extract it otherwise.\n            var extractPath = path.join(opts.path, entry.path);\n            if (extractPath.indexOf(opts.path) != 0) {\n              return;\n            }\n            var writer = opts.getWriter ? opts.getWriter({path: extractPath}) :  Writer({ path: extractPath });\n\n            return new Promise(function(resolve, reject) {\n              entry.stream(opts.password)\n                .on('error',reject)\n                .pipe(writer)\n                .on('close',resolve)\n                .on('error',reject);\n            });\n          }, { concurrency: opts.concurrency > 1 ? opts.concurrency : 1 });\n        });\n      };\n\n      vars.files = Promise.mapSeries(Array(vars.numberOfRecords),function() {\n        return records.pull(46).then(function(data) {    \n          var vars = binary.parse(data)\n            .word32lu('signature')\n            .word16lu('versionMadeBy')\n            .word16lu('versionsNeededToExtract')\n            .word16lu('flags')\n            .word16lu('compressionMethod')\n            .word16lu('lastModifiedTime')\n            .word16lu('lastModifiedDate')\n            .word32lu('crc32')\n            .word32lu('compressedSize')\n            .word32lu('uncompressedSize')\n            .word16lu('fileNameLength')\n            .word16lu('extraFieldLength')\n            .word16lu('fileCommentLength')\n            .word16lu('diskNumber')\n            .word16lu('internalFileAttributes')\n            .word32lu('externalFileAttributes')\n            .word32lu('offsetToLocalFileHeader')\n            .vars;\n\n        vars.offsetToLocalFileHeader += startOffset;\n        vars.lastModifiedDateTime = parseDateTime(vars.lastModifiedDate, vars.lastModifiedTime);\n\n        return records.pull(vars.fileNameLength).then(function(fileNameBuffer) {\n          vars.pathBuffer = fileNameBuffer;\n          vars.path = fileNameBuffer.toString('utf8');\n          vars.isUnicode = (vars.flags & 0x800) != 0;\n          return records.pull(vars.extraFieldLength);\n        })\n        .then(function(extraField) {\n          vars.extra = parseExtraField(extraField, vars);\n          return records.pull(vars.fileCommentLength);\n        })\n        .then(function(comment) {\n          vars.comment = comment;\n          vars.type = (vars.uncompressedSize === 0 && /[\\/\\\\]$/.test(vars.path)) ? 'Directory' : 'File';\n          vars.stream = function(_password) {\n            return unzip(source, vars.offsetToLocalFileHeader,_password, vars);\n          };\n          vars.buffer = function(_password) {\n            return BufferStream(vars.stream(_password));\n          };\n          return vars;\n        });\n      });\n    });\n\n    return Promise.props(vars);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/Open/directory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/Open/index.js":
/*!*************************************************!*\
  !*** ./node_modules/unzipper/lib/Open/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var fs = __webpack_require__(/*! graceful-fs */ \"(rsc)/./node_modules/graceful-fs/graceful-fs.js\");\nvar Promise = __webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\");\nvar directory = __webpack_require__(/*! ./directory */ \"(rsc)/./node_modules/unzipper/lib/Open/directory.js\");\nvar Stream = __webpack_require__(/*! stream */ \"stream\");\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\");\n\nmodule.exports = {\n  buffer: function(buffer, options) {\n    var source = {\n      stream: function(offset, length) {\n        var stream = Stream.PassThrough();\n        stream.end(buffer.slice(offset, length));\n        return stream;\n      },\n      size: function() {\n        return Promise.resolve(buffer.length);\n      }\n    };\n    return directory(source, options);\n  },\n  file: function(filename, options) {\n    var source = {\n      stream: function(offset,length) {\n        return fs.createReadStream(filename,{start: offset, end: length && offset+length});\n      },\n      size: function() {\n        return new Promise(function(resolve,reject) {\n          fs.stat(filename,function(err,d) {\n            if (err)\n              reject(err);\n            else\n              resolve(d.size);\n          });\n        });\n      }\n    };\n    return directory(source, options);\n  },\n\n  url: function(request, params, options) {\n    if (typeof params === 'string')\n      params = {url: params};\n    if (!params.url)\n      throw 'URL missing';\n    params.headers = params.headers || {};\n\n    var source = {\n      stream : function(offset,length) {\n        var options = Object.create(params);\n        options.headers = Object.create(params.headers);\n        options.headers.range = 'bytes='+offset+'-' + (length ? length : '');\n        return request(options);\n      },\n      size: function() {\n        return new Promise(function(resolve,reject) {\n          var req = request(params);\n          req.on('response',function(d) {\n            req.abort();\n            if (!d.headers['content-length'])\n              reject(new Error('Missing content length header'));\n            else\n              resolve(d.headers['content-length']);\n          }).on('error',reject);\n        });\n      }\n    };\n\n    return directory(source, options);\n  },\n\n  s3 : function(client,params, options) {\n    var source = {\n      size: function() {\n        return new Promise(function(resolve,reject) {\n          client.headObject(params, function(err,d) {\n            if (err)\n              reject(err);\n            else\n              resolve(d.ContentLength);\n          });\n        });\n      },\n      stream: function(offset,length) {\n        var d = {};\n        for (var key in params)\n          d[key] = params[key];\n        d.Range = 'bytes='+offset+'-' + (length ? length : '');\n        return client.getObject(d).createReadStream();\n      }\n    };\n\n    return directory(source, options);\n  },\n\n  custom: function(source, options) {\n    return directory(source, options);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL09wZW4vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxtQkFBTyxDQUFDLG9FQUFhO0FBQzlCLGNBQWMsbUJBQU8sQ0FBQyxzRUFBVTtBQUNoQyxnQkFBZ0IsbUJBQU8sQ0FBQyx3RUFBYTtBQUNyQyxhQUFhLG1CQUFPLENBQUMsc0JBQVE7O0FBRTdCO0FBQ0E7QUFDQSxXQUFXLG1CQUFPLENBQUMseUVBQWlCOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyw0Q0FBNEM7QUFDekYsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXENraGFkYXJcXERvd25sb2Fkc1xcQUlfQmFzZWxpbmVfTWFwXFxub2RlX21vZHVsZXNcXHVuemlwcGVyXFxsaWJcXE9wZW5cXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBmcyA9IHJlcXVpcmUoJ2dyYWNlZnVsLWZzJyk7XG52YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG52YXIgZGlyZWN0b3J5ID0gcmVxdWlyZSgnLi9kaXJlY3RvcnknKTtcbnZhciBTdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKTtcblxuLy8gQmFja3dhcmRzIGNvbXBhdGliaWxpdHkgZm9yIG5vZGUgdmVyc2lvbnMgPCA4XG5pZiAoIVN0cmVhbS5Xcml0YWJsZSB8fCAhU3RyZWFtLldyaXRhYmxlLnByb3RvdHlwZS5kZXN0cm95KVxuICBTdHJlYW0gPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0nKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGJ1ZmZlcjogZnVuY3Rpb24oYnVmZmVyLCBvcHRpb25zKSB7XG4gICAgdmFyIHNvdXJjZSA9IHtcbiAgICAgIHN0cmVhbTogZnVuY3Rpb24ob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgdmFyIHN0cmVhbSA9IFN0cmVhbS5QYXNzVGhyb3VnaCgpO1xuICAgICAgICBzdHJlYW0uZW5kKGJ1ZmZlci5zbGljZShvZmZzZXQsIGxlbmd0aCkpO1xuICAgICAgICByZXR1cm4gc3RyZWFtO1xuICAgICAgfSxcbiAgICAgIHNpemU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGJ1ZmZlci5sZW5ndGgpO1xuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGRpcmVjdG9yeShzb3VyY2UsIG9wdGlvbnMpO1xuICB9LFxuICBmaWxlOiBmdW5jdGlvbihmaWxlbmFtZSwgb3B0aW9ucykge1xuICAgIHZhciBzb3VyY2UgPSB7XG4gICAgICBzdHJlYW06IGZ1bmN0aW9uKG9mZnNldCxsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZzLmNyZWF0ZVJlYWRTdHJlYW0oZmlsZW5hbWUse3N0YXJ0OiBvZmZzZXQsIGVuZDogbGVuZ3RoICYmIG9mZnNldCtsZW5ndGh9KTtcbiAgICAgIH0sXG4gICAgICBzaXplOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KSB7XG4gICAgICAgICAgZnMuc3RhdChmaWxlbmFtZSxmdW5jdGlvbihlcnIsZCkge1xuICAgICAgICAgICAgaWYgKGVycilcbiAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgIHJlc29sdmUoZC5zaXplKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gZGlyZWN0b3J5KHNvdXJjZSwgb3B0aW9ucyk7XG4gIH0sXG5cbiAgdXJsOiBmdW5jdGlvbihyZXF1ZXN0LCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIHBhcmFtcyA9PT0gJ3N0cmluZycpXG4gICAgICBwYXJhbXMgPSB7dXJsOiBwYXJhbXN9O1xuICAgIGlmICghcGFyYW1zLnVybClcbiAgICAgIHRocm93ICdVUkwgbWlzc2luZyc7XG4gICAgcGFyYW1zLmhlYWRlcnMgPSBwYXJhbXMuaGVhZGVycyB8fCB7fTtcblxuICAgIHZhciBzb3VyY2UgPSB7XG4gICAgICBzdHJlYW0gOiBmdW5jdGlvbihvZmZzZXQsbGVuZ3RoKSB7XG4gICAgICAgIHZhciBvcHRpb25zID0gT2JqZWN0LmNyZWF0ZShwYXJhbXMpO1xuICAgICAgICBvcHRpb25zLmhlYWRlcnMgPSBPYmplY3QuY3JlYXRlKHBhcmFtcy5oZWFkZXJzKTtcbiAgICAgICAgb3B0aW9ucy5oZWFkZXJzLnJhbmdlID0gJ2J5dGVzPScrb2Zmc2V0KyctJyArIChsZW5ndGggPyBsZW5ndGggOiAnJyk7XG4gICAgICAgIHJldHVybiByZXF1ZXN0KG9wdGlvbnMpO1xuICAgICAgfSxcbiAgICAgIHNpemU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3QpIHtcbiAgICAgICAgICB2YXIgcmVxID0gcmVxdWVzdChwYXJhbXMpO1xuICAgICAgICAgIHJlcS5vbigncmVzcG9uc2UnLGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIHJlcS5hYm9ydCgpO1xuICAgICAgICAgICAgaWYgKCFkLmhlYWRlcnNbJ2NvbnRlbnQtbGVuZ3RoJ10pXG4gICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ01pc3NpbmcgY29udGVudCBsZW5ndGggaGVhZGVyJykpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICByZXNvbHZlKGQuaGVhZGVyc1snY29udGVudC1sZW5ndGgnXSk7XG4gICAgICAgICAgfSkub24oJ2Vycm9yJyxyZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIGRpcmVjdG9yeShzb3VyY2UsIG9wdGlvbnMpO1xuICB9LFxuXG4gIHMzIDogZnVuY3Rpb24oY2xpZW50LHBhcmFtcywgb3B0aW9ucykge1xuICAgIHZhciBzb3VyY2UgPSB7XG4gICAgICBzaXplOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KSB7XG4gICAgICAgICAgY2xpZW50LmhlYWRPYmplY3QocGFyYW1zLCBmdW5jdGlvbihlcnIsZCkge1xuICAgICAgICAgICAgaWYgKGVycilcbiAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgIHJlc29sdmUoZC5Db250ZW50TGVuZ3RoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgc3RyZWFtOiBmdW5jdGlvbihvZmZzZXQsbGVuZ3RoKSB7XG4gICAgICAgIHZhciBkID0ge307XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBwYXJhbXMpXG4gICAgICAgICAgZFtrZXldID0gcGFyYW1zW2tleV07XG4gICAgICAgIGQuUmFuZ2UgPSAnYnl0ZXM9JytvZmZzZXQrJy0nICsgKGxlbmd0aCA/IGxlbmd0aCA6ICcnKTtcbiAgICAgICAgcmV0dXJuIGNsaWVudC5nZXRPYmplY3QoZCkuY3JlYXRlUmVhZFN0cmVhbSgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gZGlyZWN0b3J5KHNvdXJjZSwgb3B0aW9ucyk7XG4gIH0sXG5cbiAgY3VzdG9tOiBmdW5jdGlvbihzb3VyY2UsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZGlyZWN0b3J5KHNvdXJjZSwgb3B0aW9ucyk7XG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/Open/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/Open/unzip.js":
/*!*************************************************!*\
  !*** ./node_modules/unzipper/lib/Open/unzip.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Promise = __webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\");\nvar Decrypt = __webpack_require__(/*! ../Decrypt */ \"(rsc)/./node_modules/unzipper/lib/Decrypt.js\");\nvar PullStream = __webpack_require__(/*! ../PullStream */ \"(rsc)/./node_modules/unzipper/lib/PullStream.js\");\nvar Stream = __webpack_require__(/*! stream */ \"stream\");\nvar binary = __webpack_require__(/*! binary */ \"(rsc)/./node_modules/binary/index.js\");\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\nvar parseExtraField = __webpack_require__(/*! ../parseExtraField */ \"(rsc)/./node_modules/unzipper/lib/parseExtraField.js\");\nvar Buffer = __webpack_require__(/*! ../Buffer */ \"(rsc)/./node_modules/unzipper/lib/Buffer.js\");\nvar parseDateTime = __webpack_require__(/*! ../parseDateTime */ \"(rsc)/./node_modules/unzipper/lib/parseDateTime.js\");\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\");\n\nmodule.exports = function unzip(source,offset,_password, directoryVars) {\n  var file = PullStream(),\n      entry = Stream.PassThrough();\n\n  var req = source.stream(offset);\n  req.pipe(file).on('error', function(e) {\n    entry.emit('error', e);\n  });\n\n  entry.vars = file.pull(30)\n    .then(function(data) {\n      var vars = binary.parse(data)\n        .word32lu('signature')\n        .word16lu('versionsNeededToExtract')\n        .word16lu('flags')\n        .word16lu('compressionMethod')\n        .word16lu('lastModifiedTime')\n        .word16lu('lastModifiedDate')\n        .word32lu('crc32')\n        .word32lu('compressedSize')\n        .word32lu('uncompressedSize')\n        .word16lu('fileNameLength')\n        .word16lu('extraFieldLength')\n        .vars;\n\n      vars.lastModifiedDateTime = parseDateTime(vars.lastModifiedDate, vars.lastModifiedTime);\n\n      return file.pull(vars.fileNameLength)\n        .then(function(fileName) {\n          vars.fileName = fileName.toString('utf8');\n          return file.pull(vars.extraFieldLength);\n        })\n        .then(function(extraField) {\n          var checkEncryption;\n          vars.extra = parseExtraField(extraField, vars);\n          // Ignore logal file header vars if the directory vars are available\n          if (directoryVars && directoryVars.compressedSize) vars = directoryVars;\n\n          if (vars.flags & 0x01) checkEncryption = file.pull(12)\n            .then(function(header) {\n              if (!_password)\n                throw new Error('MISSING_PASSWORD');\n\n              var decrypt = Decrypt();\n\n              String(_password).split('').forEach(function(d) {\n                decrypt.update(d);\n              });\n\n              for (var i=0; i < header.length; i++)\n                header[i] = decrypt.decryptByte(header[i]);\n\n              vars.decrypt = decrypt;\n              vars.compressedSize -= 12;\n\n              var check = (vars.flags & 0x8) ? (vars.lastModifiedTime >> 8) & 0xff : (vars.crc32 >> 24) & 0xff;\n              if (header[11] !== check)\n                throw new Error('BAD_PASSWORD');\n\n              return vars;\n            });\n\n          return Promise.resolve(checkEncryption)\n            .then(function() {\n              entry.emit('vars',vars);\n              return vars;\n            });\n        });\n    });\n\n    entry.vars.then(function(vars) {\n      var fileSizeKnown = !(vars.flags & 0x08) || vars.compressedSize > 0,\n          eof;\n\n      var inflater = vars.compressionMethod ? zlib.createInflateRaw() : Stream.PassThrough();\n\n      if (fileSizeKnown) {\n        entry.size = vars.uncompressedSize;\n        eof = vars.compressedSize;\n      } else {\n        eof = Buffer.alloc(4);\n        eof.writeUInt32LE(0x08074b50, 0);\n      }\n\n      var stream = file.stream(eof);\n\n      if (vars.decrypt)\n        stream = stream.pipe(vars.decrypt.stream());\n\n      stream\n        .pipe(inflater)\n        .on('error',function(err) { entry.emit('error',err);})\n        .pipe(entry)\n        .on('finish', function() {\n          if(req.destroy)\n            req.destroy()\n          else if (req.abort)\n            req.abort();\n          else if (req.close)\n            req.close();\n          else if (req.push)\n            req.push();\n          else\n            console.log('warning - unable to close stream');\n        });\n    })\n    .catch(function(e) {\n      entry.emit('error',e);\n    });\n\n  return entry;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL09wZW4vdW56aXAuanMiLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLHNFQUFVO0FBQ2hDLGNBQWMsbUJBQU8sQ0FBQyxnRUFBWTtBQUNsQyxpQkFBaUIsbUJBQU8sQ0FBQyxzRUFBZTtBQUN4QyxhQUFhLG1CQUFPLENBQUMsc0JBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLG9EQUFRO0FBQzdCLFdBQVcsbUJBQU8sQ0FBQyxrQkFBTTtBQUN6QixzQkFBc0IsbUJBQU8sQ0FBQyxnRkFBb0I7QUFDbEQsYUFBYSxtQkFBTyxDQUFDLDhEQUFXO0FBQ2hDLG9CQUFvQixtQkFBTyxDQUFDLDRFQUFrQjs7QUFFOUM7QUFDQTtBQUNBLFdBQVcsbUJBQU8sQ0FBQyx5RUFBaUI7O0FBRXBDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxlQUFlOztBQUVmLDRCQUE0QixtQkFBbUI7QUFDL0M7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCxLQUFLOztBQUVMO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9DQUFvQyx5QkFBeUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXENraGFkYXJcXERvd25sb2Fkc1xcQUlfQmFzZWxpbmVfTWFwXFxub2RlX21vZHVsZXNcXHVuemlwcGVyXFxsaWJcXE9wZW5cXHVuemlwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKTtcbnZhciBEZWNyeXB0ID0gcmVxdWlyZSgnLi4vRGVjcnlwdCcpO1xudmFyIFB1bGxTdHJlYW0gPSByZXF1aXJlKCcuLi9QdWxsU3RyZWFtJyk7XG52YXIgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJyk7XG52YXIgYmluYXJ5ID0gcmVxdWlyZSgnYmluYXJ5Jyk7XG52YXIgemxpYiA9IHJlcXVpcmUoJ3psaWInKTtcbnZhciBwYXJzZUV4dHJhRmllbGQgPSByZXF1aXJlKCcuLi9wYXJzZUV4dHJhRmllbGQnKTtcbnZhciBCdWZmZXIgPSByZXF1aXJlKCcuLi9CdWZmZXInKTtcbnZhciBwYXJzZURhdGVUaW1lID0gcmVxdWlyZSgnLi4vcGFyc2VEYXRlVGltZScpO1xuXG4vLyBCYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBmb3Igbm9kZSB2ZXJzaW9ucyA8IDhcbmlmICghU3RyZWFtLldyaXRhYmxlIHx8ICFTdHJlYW0uV3JpdGFibGUucHJvdG90eXBlLmRlc3Ryb3kpXG4gIFN0cmVhbSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHVuemlwKHNvdXJjZSxvZmZzZXQsX3Bhc3N3b3JkLCBkaXJlY3RvcnlWYXJzKSB7XG4gIHZhciBmaWxlID0gUHVsbFN0cmVhbSgpLFxuICAgICAgZW50cnkgPSBTdHJlYW0uUGFzc1Rocm91Z2goKTtcblxuICB2YXIgcmVxID0gc291cmNlLnN0cmVhbShvZmZzZXQpO1xuICByZXEucGlwZShmaWxlKS5vbignZXJyb3InLCBmdW5jdGlvbihlKSB7XG4gICAgZW50cnkuZW1pdCgnZXJyb3InLCBlKTtcbiAgfSk7XG5cbiAgZW50cnkudmFycyA9IGZpbGUucHVsbCgzMClcbiAgICAudGhlbihmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgdmFycyA9IGJpbmFyeS5wYXJzZShkYXRhKVxuICAgICAgICAud29yZDMybHUoJ3NpZ25hdHVyZScpXG4gICAgICAgIC53b3JkMTZsdSgndmVyc2lvbnNOZWVkZWRUb0V4dHJhY3QnKVxuICAgICAgICAud29yZDE2bHUoJ2ZsYWdzJylcbiAgICAgICAgLndvcmQxNmx1KCdjb21wcmVzc2lvbk1ldGhvZCcpXG4gICAgICAgIC53b3JkMTZsdSgnbGFzdE1vZGlmaWVkVGltZScpXG4gICAgICAgIC53b3JkMTZsdSgnbGFzdE1vZGlmaWVkRGF0ZScpXG4gICAgICAgIC53b3JkMzJsdSgnY3JjMzInKVxuICAgICAgICAud29yZDMybHUoJ2NvbXByZXNzZWRTaXplJylcbiAgICAgICAgLndvcmQzMmx1KCd1bmNvbXByZXNzZWRTaXplJylcbiAgICAgICAgLndvcmQxNmx1KCdmaWxlTmFtZUxlbmd0aCcpXG4gICAgICAgIC53b3JkMTZsdSgnZXh0cmFGaWVsZExlbmd0aCcpXG4gICAgICAgIC52YXJzO1xuXG4gICAgICB2YXJzLmxhc3RNb2RpZmllZERhdGVUaW1lID0gcGFyc2VEYXRlVGltZSh2YXJzLmxhc3RNb2RpZmllZERhdGUsIHZhcnMubGFzdE1vZGlmaWVkVGltZSk7XG5cbiAgICAgIHJldHVybiBmaWxlLnB1bGwodmFycy5maWxlTmFtZUxlbmd0aClcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24oZmlsZU5hbWUpIHtcbiAgICAgICAgICB2YXJzLmZpbGVOYW1lID0gZmlsZU5hbWUudG9TdHJpbmcoJ3V0ZjgnKTtcbiAgICAgICAgICByZXR1cm4gZmlsZS5wdWxsKHZhcnMuZXh0cmFGaWVsZExlbmd0aCk7XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGV4dHJhRmllbGQpIHtcbiAgICAgICAgICB2YXIgY2hlY2tFbmNyeXB0aW9uO1xuICAgICAgICAgIHZhcnMuZXh0cmEgPSBwYXJzZUV4dHJhRmllbGQoZXh0cmFGaWVsZCwgdmFycyk7XG4gICAgICAgICAgLy8gSWdub3JlIGxvZ2FsIGZpbGUgaGVhZGVyIHZhcnMgaWYgdGhlIGRpcmVjdG9yeSB2YXJzIGFyZSBhdmFpbGFibGVcbiAgICAgICAgICBpZiAoZGlyZWN0b3J5VmFycyAmJiBkaXJlY3RvcnlWYXJzLmNvbXByZXNzZWRTaXplKSB2YXJzID0gZGlyZWN0b3J5VmFycztcblxuICAgICAgICAgIGlmICh2YXJzLmZsYWdzICYgMHgwMSkgY2hlY2tFbmNyeXB0aW9uID0gZmlsZS5wdWxsKDEyKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oaGVhZGVyKSB7XG4gICAgICAgICAgICAgIGlmICghX3Bhc3N3b3JkKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTUlTU0lOR19QQVNTV09SRCcpO1xuXG4gICAgICAgICAgICAgIHZhciBkZWNyeXB0ID0gRGVjcnlwdCgpO1xuXG4gICAgICAgICAgICAgIFN0cmluZyhfcGFzc3dvcmQpLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgICBkZWNyeXB0LnVwZGF0ZShkKTtcbiAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgZm9yICh2YXIgaT0wOyBpIDwgaGVhZGVyLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgICAgIGhlYWRlcltpXSA9IGRlY3J5cHQuZGVjcnlwdEJ5dGUoaGVhZGVyW2ldKTtcblxuICAgICAgICAgICAgICB2YXJzLmRlY3J5cHQgPSBkZWNyeXB0O1xuICAgICAgICAgICAgICB2YXJzLmNvbXByZXNzZWRTaXplIC09IDEyO1xuXG4gICAgICAgICAgICAgIHZhciBjaGVjayA9ICh2YXJzLmZsYWdzICYgMHg4KSA/ICh2YXJzLmxhc3RNb2RpZmllZFRpbWUgPj4gOCkgJiAweGZmIDogKHZhcnMuY3JjMzIgPj4gMjQpICYgMHhmZjtcbiAgICAgICAgICAgICAgaWYgKGhlYWRlclsxMV0gIT09IGNoZWNrKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQkFEX1BBU1NXT1JEJyk7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIHZhcnM7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoY2hlY2tFbmNyeXB0aW9uKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIGVudHJ5LmVtaXQoJ3ZhcnMnLHZhcnMpO1xuICAgICAgICAgICAgICByZXR1cm4gdmFycztcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIGVudHJ5LnZhcnMudGhlbihmdW5jdGlvbih2YXJzKSB7XG4gICAgICB2YXIgZmlsZVNpemVLbm93biA9ICEodmFycy5mbGFncyAmIDB4MDgpIHx8IHZhcnMuY29tcHJlc3NlZFNpemUgPiAwLFxuICAgICAgICAgIGVvZjtcblxuICAgICAgdmFyIGluZmxhdGVyID0gdmFycy5jb21wcmVzc2lvbk1ldGhvZCA/IHpsaWIuY3JlYXRlSW5mbGF0ZVJhdygpIDogU3RyZWFtLlBhc3NUaHJvdWdoKCk7XG5cbiAgICAgIGlmIChmaWxlU2l6ZUtub3duKSB7XG4gICAgICAgIGVudHJ5LnNpemUgPSB2YXJzLnVuY29tcHJlc3NlZFNpemU7XG4gICAgICAgIGVvZiA9IHZhcnMuY29tcHJlc3NlZFNpemU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlb2YgPSBCdWZmZXIuYWxsb2MoNCk7XG4gICAgICAgIGVvZi53cml0ZVVJbnQzMkxFKDB4MDgwNzRiNTAsIDApO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3RyZWFtID0gZmlsZS5zdHJlYW0oZW9mKTtcblxuICAgICAgaWYgKHZhcnMuZGVjcnlwdClcbiAgICAgICAgc3RyZWFtID0gc3RyZWFtLnBpcGUodmFycy5kZWNyeXB0LnN0cmVhbSgpKTtcblxuICAgICAgc3RyZWFtXG4gICAgICAgIC5waXBlKGluZmxhdGVyKVxuICAgICAgICAub24oJ2Vycm9yJyxmdW5jdGlvbihlcnIpIHsgZW50cnkuZW1pdCgnZXJyb3InLGVycik7fSlcbiAgICAgICAgLnBpcGUoZW50cnkpXG4gICAgICAgIC5vbignZmluaXNoJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYocmVxLmRlc3Ryb3kpXG4gICAgICAgICAgICByZXEuZGVzdHJveSgpXG4gICAgICAgICAgZWxzZSBpZiAocmVxLmFib3J0KVxuICAgICAgICAgICAgcmVxLmFib3J0KCk7XG4gICAgICAgICAgZWxzZSBpZiAocmVxLmNsb3NlKVxuICAgICAgICAgICAgcmVxLmNsb3NlKCk7XG4gICAgICAgICAgZWxzZSBpZiAocmVxLnB1c2gpXG4gICAgICAgICAgICByZXEucHVzaCgpO1xuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd3YXJuaW5nIC0gdW5hYmxlIHRvIGNsb3NlIHN0cmVhbScpO1xuICAgICAgICB9KTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbihlKSB7XG4gICAgICBlbnRyeS5lbWl0KCdlcnJvcicsZSk7XG4gICAgfSk7XG5cbiAgcmV0dXJuIGVudHJ5O1xufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/Open/unzip.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/PullStream.js":
/*!*************************************************!*\
  !*** ./node_modules/unzipper/lib/PullStream.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Stream = __webpack_require__(/*! stream */ \"stream\");\nvar Promise = __webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\");\nvar util = __webpack_require__(/*! util */ \"util\");\nvar Buffer = __webpack_require__(/*! ./Buffer */ \"(rsc)/./node_modules/unzipper/lib/Buffer.js\");\nvar strFunction = 'function';\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\");\n\nfunction PullStream() {\n  if (!(this instanceof PullStream))\n    return new PullStream();\n\n  Stream.Duplex.call(this,{decodeStrings:false, objectMode:true});\n  this.buffer = Buffer.from('');\n  var self = this;\n  self.on('finish',function() {\n    self.finished = true;\n    self.emit('chunk',false);\n  });\n}\n\nutil.inherits(PullStream,Stream.Duplex);\n\nPullStream.prototype._write = function(chunk,e,cb) {\n  this.buffer = Buffer.concat([this.buffer,chunk]);\n  this.cb = cb;\n  this.emit('chunk');\n};\n\n\n// The `eof` parameter is interpreted as `file_length` if the type is number\n// otherwise (i.e. buffer) it is interpreted as a pattern signaling end of stream\nPullStream.prototype.stream = function(eof,includeEof) {\n  var p = Stream.PassThrough();\n  var done,self= this;\n\n  function cb() {\n    if (typeof self.cb === strFunction) {\n      var callback = self.cb;\n      self.cb = undefined;\n      return callback();\n    }\n  }\n\n  function pull() {\n    var packet;\n    if (self.buffer && self.buffer.length) {\n      if (typeof eof === 'number') {\n        packet = self.buffer.slice(0,eof);\n        self.buffer = self.buffer.slice(eof);\n        eof -= packet.length;\n        done = !eof;\n      } else {\n        var match = self.buffer.indexOf(eof);\n        if (match !== -1) {\n          // store signature match byte offset to allow us to reference\n          // this for zip64 offset\n          self.match = match\n          if (includeEof) match = match + eof.length;\n          packet = self.buffer.slice(0,match);\n          self.buffer = self.buffer.slice(match);\n          done = true;\n        } else {\n          var len = self.buffer.length - eof.length;\n          if (len <= 0) {\n            cb();\n          } else {\n            packet = self.buffer.slice(0,len);\n            self.buffer = self.buffer.slice(len);\n          }\n        }\n      }\n      if (packet) p.write(packet,function() {\n        if (self.buffer.length === 0 || (eof.length && self.buffer.length <= eof.length)) cb();\n      });\n    }\n    \n    if (!done) {\n      if (self.finished) {\n        self.removeListener('chunk',pull);\n        self.emit('error', new Error('FILE_ENDED'));\n        return;\n      }\n      \n    } else {\n      self.removeListener('chunk',pull);\n      p.end();\n    }\n  }\n\n  self.on('chunk',pull);\n  pull();\n  return p;\n};\n\nPullStream.prototype.pull = function(eof,includeEof) {\n  if (eof === 0) return Promise.resolve('');\n\n  // If we already have the required data in buffer\n  // we can resolve the request immediately\n  if (!isNaN(eof) && this.buffer.length > eof) {\n    var data = this.buffer.slice(0,eof);\n    this.buffer = this.buffer.slice(eof);\n    return Promise.resolve(data);\n  }\n\n  // Otherwise we stream until we have it\n  var buffer = Buffer.from(''),\n      self = this;\n\n  var concatStream = Stream.Transform();\n  concatStream._transform = function(d,e,cb) {\n    buffer = Buffer.concat([buffer,d]);\n    cb();\n  };\n  \n  var rejectHandler;\n  var pullStreamRejectHandler;\n  return new Promise(function(resolve,reject) {\n    rejectHandler = reject;\n    pullStreamRejectHandler = function(e) {\n      self.__emittedError = e;\n      reject(e);\n    }\n    if (self.finished)\n      return reject(new Error('FILE_ENDED'));\n    self.once('error',pullStreamRejectHandler);  // reject any errors from pullstream itself\n    self.stream(eof,includeEof)\n      .on('error',reject)\n      .pipe(concatStream)\n      .on('finish',function() {resolve(buffer);})\n      .on('error',reject);\n  })\n  .finally(function() {\n    self.removeListener('error',rejectHandler);\n    self.removeListener('error',pullStreamRejectHandler);\n  });\n};\n\nPullStream.prototype._read = function(){};\n\nmodule.exports = PullStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL1B1bGxTdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLHNCQUFRO0FBQzdCLGNBQWMsbUJBQU8sQ0FBQyxzRUFBVTtBQUNoQyxXQUFXLG1CQUFPLENBQUMsa0JBQU07QUFDekIsYUFBYSxtQkFBTyxDQUFDLDZEQUFVO0FBQy9COztBQUVBO0FBQ0E7QUFDQSxXQUFXLG1CQUFPLENBQUMseUVBQWlCOztBQUVwQztBQUNBO0FBQ0E7O0FBRUEsMkJBQTJCLHFDQUFxQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsaUJBQWlCO0FBQ2hEO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxDa2hhZGFyXFxEb3dubG9hZHNcXEFJX0Jhc2VsaW5lX01hcFxcbm9kZV9tb2R1bGVzXFx1bnppcHBlclxcbGliXFxQdWxsU3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBTdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKTtcbnZhciBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKTtcbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJy4vQnVmZmVyJyk7XG52YXIgc3RyRnVuY3Rpb24gPSAnZnVuY3Rpb24nO1xuXG4vLyBCYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBmb3Igbm9kZSB2ZXJzaW9ucyA8IDhcbmlmICghU3RyZWFtLldyaXRhYmxlIHx8ICFTdHJlYW0uV3JpdGFibGUucHJvdG90eXBlLmRlc3Ryb3kpXG4gIFN0cmVhbSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbScpO1xuXG5mdW5jdGlvbiBQdWxsU3RyZWFtKCkge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUHVsbFN0cmVhbSkpXG4gICAgcmV0dXJuIG5ldyBQdWxsU3RyZWFtKCk7XG5cbiAgU3RyZWFtLkR1cGxleC5jYWxsKHRoaXMse2RlY29kZVN0cmluZ3M6ZmFsc2UsIG9iamVjdE1vZGU6dHJ1ZX0pO1xuICB0aGlzLmJ1ZmZlciA9IEJ1ZmZlci5mcm9tKCcnKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBzZWxmLm9uKCdmaW5pc2gnLGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuZmluaXNoZWQgPSB0cnVlO1xuICAgIHNlbGYuZW1pdCgnY2h1bmsnLGZhbHNlKTtcbiAgfSk7XG59XG5cbnV0aWwuaW5oZXJpdHMoUHVsbFN0cmVhbSxTdHJlYW0uRHVwbGV4KTtcblxuUHVsbFN0cmVhbS5wcm90b3R5cGUuX3dyaXRlID0gZnVuY3Rpb24oY2h1bmssZSxjYikge1xuICB0aGlzLmJ1ZmZlciA9IEJ1ZmZlci5jb25jYXQoW3RoaXMuYnVmZmVyLGNodW5rXSk7XG4gIHRoaXMuY2IgPSBjYjtcbiAgdGhpcy5lbWl0KCdjaHVuaycpO1xufTtcblxuXG4vLyBUaGUgYGVvZmAgcGFyYW1ldGVyIGlzIGludGVycHJldGVkIGFzIGBmaWxlX2xlbmd0aGAgaWYgdGhlIHR5cGUgaXMgbnVtYmVyXG4vLyBvdGhlcndpc2UgKGkuZS4gYnVmZmVyKSBpdCBpcyBpbnRlcnByZXRlZCBhcyBhIHBhdHRlcm4gc2lnbmFsaW5nIGVuZCBvZiBzdHJlYW1cblB1bGxTdHJlYW0ucHJvdG90eXBlLnN0cmVhbSA9IGZ1bmN0aW9uKGVvZixpbmNsdWRlRW9mKSB7XG4gIHZhciBwID0gU3RyZWFtLlBhc3NUaHJvdWdoKCk7XG4gIHZhciBkb25lLHNlbGY9IHRoaXM7XG5cbiAgZnVuY3Rpb24gY2IoKSB7XG4gICAgaWYgKHR5cGVvZiBzZWxmLmNiID09PSBzdHJGdW5jdGlvbikge1xuICAgICAgdmFyIGNhbGxiYWNrID0gc2VsZi5jYjtcbiAgICAgIHNlbGYuY2IgPSB1bmRlZmluZWQ7XG4gICAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwdWxsKCkge1xuICAgIHZhciBwYWNrZXQ7XG4gICAgaWYgKHNlbGYuYnVmZmVyICYmIHNlbGYuYnVmZmVyLmxlbmd0aCkge1xuICAgICAgaWYgKHR5cGVvZiBlb2YgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHBhY2tldCA9IHNlbGYuYnVmZmVyLnNsaWNlKDAsZW9mKTtcbiAgICAgICAgc2VsZi5idWZmZXIgPSBzZWxmLmJ1ZmZlci5zbGljZShlb2YpO1xuICAgICAgICBlb2YgLT0gcGFja2V0Lmxlbmd0aDtcbiAgICAgICAgZG9uZSA9ICFlb2Y7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgbWF0Y2ggPSBzZWxmLmJ1ZmZlci5pbmRleE9mKGVvZik7XG4gICAgICAgIGlmIChtYXRjaCAhPT0gLTEpIHtcbiAgICAgICAgICAvLyBzdG9yZSBzaWduYXR1cmUgbWF0Y2ggYnl0ZSBvZmZzZXQgdG8gYWxsb3cgdXMgdG8gcmVmZXJlbmNlXG4gICAgICAgICAgLy8gdGhpcyBmb3IgemlwNjQgb2Zmc2V0XG4gICAgICAgICAgc2VsZi5tYXRjaCA9IG1hdGNoXG4gICAgICAgICAgaWYgKGluY2x1ZGVFb2YpIG1hdGNoID0gbWF0Y2ggKyBlb2YubGVuZ3RoO1xuICAgICAgICAgIHBhY2tldCA9IHNlbGYuYnVmZmVyLnNsaWNlKDAsbWF0Y2gpO1xuICAgICAgICAgIHNlbGYuYnVmZmVyID0gc2VsZi5idWZmZXIuc2xpY2UobWF0Y2gpO1xuICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBsZW4gPSBzZWxmLmJ1ZmZlci5sZW5ndGggLSBlb2YubGVuZ3RoO1xuICAgICAgICAgIGlmIChsZW4gPD0gMCkge1xuICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGFja2V0ID0gc2VsZi5idWZmZXIuc2xpY2UoMCxsZW4pO1xuICAgICAgICAgICAgc2VsZi5idWZmZXIgPSBzZWxmLmJ1ZmZlci5zbGljZShsZW4pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHBhY2tldCkgcC53cml0ZShwYWNrZXQsZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChzZWxmLmJ1ZmZlci5sZW5ndGggPT09IDAgfHwgKGVvZi5sZW5ndGggJiYgc2VsZi5idWZmZXIubGVuZ3RoIDw9IGVvZi5sZW5ndGgpKSBjYigpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIGlmICghZG9uZSkge1xuICAgICAgaWYgKHNlbGYuZmluaXNoZWQpIHtcbiAgICAgICAgc2VsZi5yZW1vdmVMaXN0ZW5lcignY2h1bmsnLHB1bGwpO1xuICAgICAgICBzZWxmLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKCdGSUxFX0VOREVEJykpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZi5yZW1vdmVMaXN0ZW5lcignY2h1bmsnLHB1bGwpO1xuICAgICAgcC5lbmQoKTtcbiAgICB9XG4gIH1cblxuICBzZWxmLm9uKCdjaHVuaycscHVsbCk7XG4gIHB1bGwoKTtcbiAgcmV0dXJuIHA7XG59O1xuXG5QdWxsU3RyZWFtLnByb3RvdHlwZS5wdWxsID0gZnVuY3Rpb24oZW9mLGluY2x1ZGVFb2YpIHtcbiAgaWYgKGVvZiA9PT0gMCkgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgnJyk7XG5cbiAgLy8gSWYgd2UgYWxyZWFkeSBoYXZlIHRoZSByZXF1aXJlZCBkYXRhIGluIGJ1ZmZlclxuICAvLyB3ZSBjYW4gcmVzb2x2ZSB0aGUgcmVxdWVzdCBpbW1lZGlhdGVseVxuICBpZiAoIWlzTmFOKGVvZikgJiYgdGhpcy5idWZmZXIubGVuZ3RoID4gZW9mKSB7XG4gICAgdmFyIGRhdGEgPSB0aGlzLmJ1ZmZlci5zbGljZSgwLGVvZik7XG4gICAgdGhpcy5idWZmZXIgPSB0aGlzLmJ1ZmZlci5zbGljZShlb2YpO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZGF0YSk7XG4gIH1cblxuICAvLyBPdGhlcndpc2Ugd2Ugc3RyZWFtIHVudGlsIHdlIGhhdmUgaXRcbiAgdmFyIGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKCcnKSxcbiAgICAgIHNlbGYgPSB0aGlzO1xuXG4gIHZhciBjb25jYXRTdHJlYW0gPSBTdHJlYW0uVHJhbnNmb3JtKCk7XG4gIGNvbmNhdFN0cmVhbS5fdHJhbnNmb3JtID0gZnVuY3Rpb24oZCxlLGNiKSB7XG4gICAgYnVmZmVyID0gQnVmZmVyLmNvbmNhdChbYnVmZmVyLGRdKTtcbiAgICBjYigpO1xuICB9O1xuICBcbiAgdmFyIHJlamVjdEhhbmRsZXI7XG4gIHZhciBwdWxsU3RyZWFtUmVqZWN0SGFuZGxlcjtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KSB7XG4gICAgcmVqZWN0SGFuZGxlciA9IHJlamVjdDtcbiAgICBwdWxsU3RyZWFtUmVqZWN0SGFuZGxlciA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIHNlbGYuX19lbWl0dGVkRXJyb3IgPSBlO1xuICAgICAgcmVqZWN0KGUpO1xuICAgIH1cbiAgICBpZiAoc2VsZi5maW5pc2hlZClcbiAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKCdGSUxFX0VOREVEJykpO1xuICAgIHNlbGYub25jZSgnZXJyb3InLHB1bGxTdHJlYW1SZWplY3RIYW5kbGVyKTsgIC8vIHJlamVjdCBhbnkgZXJyb3JzIGZyb20gcHVsbHN0cmVhbSBpdHNlbGZcbiAgICBzZWxmLnN0cmVhbShlb2YsaW5jbHVkZUVvZilcbiAgICAgIC5vbignZXJyb3InLHJlamVjdClcbiAgICAgIC5waXBlKGNvbmNhdFN0cmVhbSlcbiAgICAgIC5vbignZmluaXNoJyxmdW5jdGlvbigpIHtyZXNvbHZlKGJ1ZmZlcik7fSlcbiAgICAgIC5vbignZXJyb3InLHJlamVjdCk7XG4gIH0pXG4gIC5maW5hbGx5KGZ1bmN0aW9uKCkge1xuICAgIHNlbGYucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJyxyZWplY3RIYW5kbGVyKTtcbiAgICBzZWxmLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicscHVsbFN0cmVhbVJlamVjdEhhbmRsZXIpO1xuICB9KTtcbn07XG5cblB1bGxTdHJlYW0ucHJvdG90eXBlLl9yZWFkID0gZnVuY3Rpb24oKXt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFB1bGxTdHJlYW07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/PullStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/extract.js":
/*!**********************************************!*\
  !*** ./node_modules/unzipper/lib/extract.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = Extract;\n\nvar Parse = __webpack_require__(/*! ./parse */ \"(rsc)/./node_modules/unzipper/lib/parse.js\");\nvar Writer = (__webpack_require__(/*! fstream */ \"(rsc)/./node_modules/fstream/fstream.js\").Writer);\nvar path = __webpack_require__(/*! path */ \"path\");\nvar stream = __webpack_require__(/*! stream */ \"stream\");\nvar duplexer2 = __webpack_require__(/*! duplexer2 */ \"(rsc)/./node_modules/duplexer2/index.js\");\nvar Promise = __webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\");\n\nfunction Extract (opts) {\n  // make sure path is normalized before using it\n  opts.path = path.resolve(path.normalize(opts.path));\n\n  var parser = new Parse(opts);\n\n  var outStream = new stream.Writable({objectMode: true});\n  outStream._write = function(entry, encoding, cb) {\n\n    if (entry.type == 'Directory') return cb();\n\n    // to avoid zip slip (writing outside of the destination), we resolve\n    // the target path, and make sure it's nested in the intended\n    // destination, or not extract it otherwise.\n    var extractPath = path.join(opts.path, entry.path);\n    if (extractPath.indexOf(opts.path) != 0) {\n      return cb();\n    }\n\n    const writer = opts.getWriter ? opts.getWriter({path: extractPath}) :  Writer({ path: extractPath });\n\n    entry.pipe(writer)\n      .on('error', cb)\n      .on('close', cb);\n  };\n\n  var extract = duplexer2(parser,outStream);\n  parser.once('crx-header', function(crxHeader) {\n    extract.crxHeader = crxHeader;\n  });\n\n  parser\n    .pipe(outStream)\n    .on('finish',function() {\n      extract.emit('close');\n    });\n  \n  extract.promise = function() {\n    return new Promise(function(resolve, reject) {\n      extract.on('close', resolve);\n      extract.on('error',reject);\n    });\n  };\n\n  return extract;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL2V4dHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsWUFBWSxtQkFBTyxDQUFDLDJEQUFTO0FBQzdCLGFBQWEsc0ZBQXlCO0FBQ3RDLFdBQVcsbUJBQU8sQ0FBQyxrQkFBTTtBQUN6QixhQUFhLG1CQUFPLENBQUMsc0JBQVE7QUFDN0IsZ0JBQWdCLG1CQUFPLENBQUMsMERBQVc7QUFDbkMsY0FBYyxtQkFBTyxDQUFDLHNFQUFVOztBQUVoQztBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsdUNBQXVDLGlCQUFpQjtBQUN4RDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvREFBb0Qsa0JBQWtCLGNBQWMsbUJBQW1COztBQUV2RztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxDa2hhZGFyXFxEb3dubG9hZHNcXEFJX0Jhc2VsaW5lX01hcFxcbm9kZV9tb2R1bGVzXFx1bnppcHBlclxcbGliXFxleHRyYWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gRXh0cmFjdDtcblxudmFyIFBhcnNlID0gcmVxdWlyZSgnLi9wYXJzZScpO1xudmFyIFdyaXRlciA9IHJlcXVpcmUoJ2ZzdHJlYW0nKS5Xcml0ZXI7XG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbnZhciBzdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKTtcbnZhciBkdXBsZXhlcjIgPSByZXF1aXJlKCdkdXBsZXhlcjInKTtcbnZhciBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKTtcblxuZnVuY3Rpb24gRXh0cmFjdCAob3B0cykge1xuICAvLyBtYWtlIHN1cmUgcGF0aCBpcyBub3JtYWxpemVkIGJlZm9yZSB1c2luZyBpdFxuICBvcHRzLnBhdGggPSBwYXRoLnJlc29sdmUocGF0aC5ub3JtYWxpemUob3B0cy5wYXRoKSk7XG5cbiAgdmFyIHBhcnNlciA9IG5ldyBQYXJzZShvcHRzKTtcblxuICB2YXIgb3V0U3RyZWFtID0gbmV3IHN0cmVhbS5Xcml0YWJsZSh7b2JqZWN0TW9kZTogdHJ1ZX0pO1xuICBvdXRTdHJlYW0uX3dyaXRlID0gZnVuY3Rpb24oZW50cnksIGVuY29kaW5nLCBjYikge1xuXG4gICAgaWYgKGVudHJ5LnR5cGUgPT0gJ0RpcmVjdG9yeScpIHJldHVybiBjYigpO1xuXG4gICAgLy8gdG8gYXZvaWQgemlwIHNsaXAgKHdyaXRpbmcgb3V0c2lkZSBvZiB0aGUgZGVzdGluYXRpb24pLCB3ZSByZXNvbHZlXG4gICAgLy8gdGhlIHRhcmdldCBwYXRoLCBhbmQgbWFrZSBzdXJlIGl0J3MgbmVzdGVkIGluIHRoZSBpbnRlbmRlZFxuICAgIC8vIGRlc3RpbmF0aW9uLCBvciBub3QgZXh0cmFjdCBpdCBvdGhlcndpc2UuXG4gICAgdmFyIGV4dHJhY3RQYXRoID0gcGF0aC5qb2luKG9wdHMucGF0aCwgZW50cnkucGF0aCk7XG4gICAgaWYgKGV4dHJhY3RQYXRoLmluZGV4T2Yob3B0cy5wYXRoKSAhPSAwKSB7XG4gICAgICByZXR1cm4gY2IoKTtcbiAgICB9XG5cbiAgICBjb25zdCB3cml0ZXIgPSBvcHRzLmdldFdyaXRlciA/IG9wdHMuZ2V0V3JpdGVyKHtwYXRoOiBleHRyYWN0UGF0aH0pIDogIFdyaXRlcih7IHBhdGg6IGV4dHJhY3RQYXRoIH0pO1xuXG4gICAgZW50cnkucGlwZSh3cml0ZXIpXG4gICAgICAub24oJ2Vycm9yJywgY2IpXG4gICAgICAub24oJ2Nsb3NlJywgY2IpO1xuICB9O1xuXG4gIHZhciBleHRyYWN0ID0gZHVwbGV4ZXIyKHBhcnNlcixvdXRTdHJlYW0pO1xuICBwYXJzZXIub25jZSgnY3J4LWhlYWRlcicsIGZ1bmN0aW9uKGNyeEhlYWRlcikge1xuICAgIGV4dHJhY3QuY3J4SGVhZGVyID0gY3J4SGVhZGVyO1xuICB9KTtcblxuICBwYXJzZXJcbiAgICAucGlwZShvdXRTdHJlYW0pXG4gICAgLm9uKCdmaW5pc2gnLGZ1bmN0aW9uKCkge1xuICAgICAgZXh0cmFjdC5lbWl0KCdjbG9zZScpO1xuICAgIH0pO1xuICBcbiAgZXh0cmFjdC5wcm9taXNlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgZXh0cmFjdC5vbignY2xvc2UnLCByZXNvbHZlKTtcbiAgICAgIGV4dHJhY3Qub24oJ2Vycm9yJyxyZWplY3QpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBleHRyYWN0O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/extract.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/parse.js":
/*!********************************************!*\
  !*** ./node_modules/unzipper/lib/parse.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! util */ \"util\");\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\nvar Stream = __webpack_require__(/*! stream */ \"stream\");\nvar binary = __webpack_require__(/*! binary */ \"(rsc)/./node_modules/binary/index.js\");\nvar Promise = __webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\");\nvar PullStream = __webpack_require__(/*! ./PullStream */ \"(rsc)/./node_modules/unzipper/lib/PullStream.js\");\nvar NoopStream = __webpack_require__(/*! ./NoopStream */ \"(rsc)/./node_modules/unzipper/lib/NoopStream.js\");\nvar BufferStream = __webpack_require__(/*! ./BufferStream */ \"(rsc)/./node_modules/unzipper/lib/BufferStream.js\");\nvar parseExtraField = __webpack_require__(/*! ./parseExtraField */ \"(rsc)/./node_modules/unzipper/lib/parseExtraField.js\");\nvar Buffer = __webpack_require__(/*! ./Buffer */ \"(rsc)/./node_modules/unzipper/lib/Buffer.js\");\nvar parseDateTime = __webpack_require__(/*! ./parseDateTime */ \"(rsc)/./node_modules/unzipper/lib/parseDateTime.js\");\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\");\n\nvar endDirectorySignature = Buffer.alloc(4);\nendDirectorySignature.writeUInt32LE(0x06054b50, 0);\n\nfunction Parse(opts) {\n  if (!(this instanceof Parse)) {\n    return new Parse(opts);\n  }\n  var self = this;\n  self._opts = opts || { verbose: false };\n\n  PullStream.call(self, self._opts);\n  self.on('finish',function() {\n    self.emit('end');\n    self.emit('close');\n  });\n  self._readRecord().catch(function(e) {\n    if (!self.__emittedError || self.__emittedError !== e)\n      self.emit('error',e);\n  });\n}\n\nutil.inherits(Parse, PullStream);\n\nParse.prototype._readRecord = function () {\n  var self = this;\n  return self.pull(4).then(function(data) {\n    if (data.length === 0)\n      return;\n\n    var signature = data.readUInt32LE(0);\n\n    if (signature === 0x34327243) {\n      return self._readCrxHeader();\n    }\n    if (signature === 0x04034b50) {\n      return self._readFile();\n    }\n    else if (signature === 0x02014b50) {\n      self.reachedCD = true;\n      return self._readCentralDirectoryFileHeader();\n    }\n    else if (signature === 0x06054b50) {\n      return self._readEndOfCentralDirectoryRecord();\n    }\n    else if (self.reachedCD) {\n      // _readEndOfCentralDirectoryRecord expects the EOCD\n      // signature to be consumed so set includeEof=true\n      var includeEof = true;\n      return self.pull(endDirectorySignature, includeEof).then(function() {\n        return self._readEndOfCentralDirectoryRecord();\n      });\n    }\n    else\n      self.emit('error', new Error('invalid signature: 0x' + signature.toString(16)));\n  });\n};\n\nParse.prototype._readCrxHeader = function() {\n  var self = this;\n  return self.pull(12).then(function(data) {\n    self.crxHeader = binary.parse(data)\n      .word32lu('version')\n      .word32lu('pubKeyLength')\n      .word32lu('signatureLength')\n      .vars;\n    return self.pull(self.crxHeader.pubKeyLength + self.crxHeader.signatureLength);\n  }).then(function(data) {\n    self.crxHeader.publicKey = data.slice(0,self.crxHeader.pubKeyLength);\n    self.crxHeader.signature = data.slice(self.crxHeader.pubKeyLength);\n    self.emit('crx-header',self.crxHeader);\n    return self._readRecord();\n  });\n};\n\nParse.prototype._readFile = function () {\n  var self = this;\n  return self.pull(26).then(function(data) {\n    var vars = binary.parse(data)\n      .word16lu('versionsNeededToExtract')\n      .word16lu('flags')\n      .word16lu('compressionMethod')\n      .word16lu('lastModifiedTime')\n      .word16lu('lastModifiedDate')\n      .word32lu('crc32')\n      .word32lu('compressedSize')\n      .word32lu('uncompressedSize')\n      .word16lu('fileNameLength')\n      .word16lu('extraFieldLength')\n      .vars;\n\n    vars.lastModifiedDateTime = parseDateTime(vars.lastModifiedDate, vars.lastModifiedTime);\n\n    if (self.crxHeader) vars.crxHeader = self.crxHeader;\n\n    return self.pull(vars.fileNameLength).then(function(fileNameBuffer) {\n      var fileName = fileNameBuffer.toString('utf8');\n      var entry = Stream.PassThrough();\n      var __autodraining = false;\n\n      entry.autodrain = function() {\n        __autodraining = true;\n        var draining = entry.pipe(NoopStream());\n        draining.promise = function() {\n          return new Promise(function(resolve, reject) {\n            draining.on('finish',resolve);\n            draining.on('error',reject);\n          });\n        };\n        return draining;\n      };\n\n      entry.buffer = function() {\n        return BufferStream(entry);\n      };\n\n      entry.path = fileName;\n      entry.props = {};\n      entry.props.path = fileName;\n      entry.props.pathBuffer = fileNameBuffer;\n      entry.props.flags = {\n        \"isUnicode\": (vars.flags & 0x800) != 0\n      };\n      entry.type = (vars.uncompressedSize === 0 && /[\\/\\\\]$/.test(fileName)) ? 'Directory' : 'File';\n\n      if (self._opts.verbose) {\n        if (entry.type === 'Directory') {\n          console.log('   creating:', fileName);\n        } else if (entry.type === 'File') {\n          if (vars.compressionMethod === 0) {\n            console.log(' extracting:', fileName);\n          } else {\n            console.log('  inflating:', fileName);\n          }\n        }\n      }\n\n      return self.pull(vars.extraFieldLength).then(function(extraField) {\n        var extra = parseExtraField(extraField, vars);\n\n        entry.vars = vars;\n        entry.extra = extra;\n\n        if (self._opts.forceStream) {\n          self.push(entry);\n        } else {\n          self.emit('entry', entry);\n\n          if (self._readableState.pipesCount || (self._readableState.pipes && self._readableState.pipes.length))\n            self.push(entry);\n        }\n\n        if (self._opts.verbose)\n          console.log({\n            filename:fileName,\n            vars: vars,\n            extra: extra\n          });\n\n        var fileSizeKnown = !(vars.flags & 0x08) || vars.compressedSize > 0,\n            eof;\n\n        entry.__autodraining = __autodraining;  // expose __autodraining for test purposes\n        var inflater = (vars.compressionMethod && !__autodraining) ? zlib.createInflateRaw() : Stream.PassThrough();\n\n        if (fileSizeKnown) {\n          entry.size = vars.uncompressedSize;\n          eof = vars.compressedSize;\n        } else {\n          eof = Buffer.alloc(4);\n          eof.writeUInt32LE(0x08074b50, 0);\n        }\n\n        return new Promise(function(resolve, reject) {\n          self.stream(eof)\n            .pipe(inflater)\n            .on('error',function(err) { self.emit('error',err);})\n            .pipe(entry)\n            .on('finish', function() {\n              return fileSizeKnown ?\n                self._readRecord().then(resolve).catch(reject) :\n                self._processDataDescriptor(entry).then(resolve).catch(reject);\n            });\n        });\n      });\n    });\n  });\n};\n\nParse.prototype._processDataDescriptor = function (entry) {\n  var self = this;\n  return self.pull(16).then(function(data) {\n    var vars = binary.parse(data)\n      .word32lu('dataDescriptorSignature')\n      .word32lu('crc32')\n      .word32lu('compressedSize')\n      .word32lu('uncompressedSize')\n      .vars;\n\n    entry.size = vars.uncompressedSize;\n    return self._readRecord();\n  });\n};\n\nParse.prototype._readCentralDirectoryFileHeader = function () {\n  var self = this;\n  return self.pull(42).then(function(data) {\n\n    var vars = binary.parse(data)\n      .word16lu('versionMadeBy')\n      .word16lu('versionsNeededToExtract')\n      .word16lu('flags')\n      .word16lu('compressionMethod')\n      .word16lu('lastModifiedTime')\n      .word16lu('lastModifiedDate')\n      .word32lu('crc32')\n      .word32lu('compressedSize')\n      .word32lu('uncompressedSize')\n      .word16lu('fileNameLength')\n      .word16lu('extraFieldLength')\n      .word16lu('fileCommentLength')\n      .word16lu('diskNumber')\n      .word16lu('internalFileAttributes')\n      .word32lu('externalFileAttributes')\n      .word32lu('offsetToLocalFileHeader')\n      .vars;\n\n    return self.pull(vars.fileNameLength).then(function(fileName) {\n      vars.fileName = fileName.toString('utf8');\n      return self.pull(vars.extraFieldLength);\n    })\n    .then(function(extraField) {\n      return self.pull(vars.fileCommentLength);\n    })\n    .then(function(fileComment) {\n      return self._readRecord();\n    });\n  });\n};\n\nParse.prototype._readEndOfCentralDirectoryRecord = function() {\n  var self = this;\n  return self.pull(18).then(function(data) {\n\n    var vars = binary.parse(data)\n      .word16lu('diskNumber')\n      .word16lu('diskStart')\n      .word16lu('numberOfRecordsOnDisk')\n      .word16lu('numberOfRecords')\n      .word32lu('sizeOfCentralDirectory')\n      .word32lu('offsetToStartOfCentralDirectory')\n      .word16lu('commentLength')\n      .vars;\n\n    return self.pull(vars.commentLength).then(function(comment) {\n      comment = comment.toString('utf8');\n      self.end();\n      self.push(null);\n    });\n\n  });\n};\n\nParse.prototype.promise = function() {\n  var self = this;\n  return new Promise(function(resolve,reject) {\n    self.on('finish',resolve);\n    self.on('error',reject);\n  });\n};\n\nmodule.exports = Parse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/parse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/parseDateTime.js":
/*!****************************************************!*\
  !*** ./node_modules/unzipper/lib/parseDateTime.js ***!
  \****************************************************/
/***/ ((module) => {

eval("// Dates in zip file entries are stored as DosDateTime\n// Spec is here: https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-dosdatetimetofiletime\n\nmodule.exports = function parseDateTime(date, time) {\n  const day = date & 0x1F;\n  const month = date >> 5 & 0x0F;\n  const year = (date >> 9 & 0x7F) + 1980;\n  const seconds = time ? (time & 0x1F) * 2 : 0;\n  const minutes = time ? (time >> 5) & 0x3F : 0;\n  const hours = time ? (time >> 11): 0;\n\n  return new Date(Date.UTC(year, month-1, day, hours, minutes, seconds));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL3BhcnNlRGF0ZVRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXENraGFkYXJcXERvd25sb2Fkc1xcQUlfQmFzZWxpbmVfTWFwXFxub2RlX21vZHVsZXNcXHVuemlwcGVyXFxsaWJcXHBhcnNlRGF0ZVRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRGF0ZXMgaW4gemlwIGZpbGUgZW50cmllcyBhcmUgc3RvcmVkIGFzIERvc0RhdGVUaW1lXG4vLyBTcGVjIGlzIGhlcmU6IGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL3dpbmRvd3Mvd2luMzIvYXBpL3dpbmJhc2UvbmYtd2luYmFzZS1kb3NkYXRldGltZXRvZmlsZXRpbWVcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZURhdGVUaW1lKGRhdGUsIHRpbWUpIHtcbiAgY29uc3QgZGF5ID0gZGF0ZSAmIDB4MUY7XG4gIGNvbnN0IG1vbnRoID0gZGF0ZSA+PiA1ICYgMHgwRjtcbiAgY29uc3QgeWVhciA9IChkYXRlID4+IDkgJiAweDdGKSArIDE5ODA7XG4gIGNvbnN0IHNlY29uZHMgPSB0aW1lID8gKHRpbWUgJiAweDFGKSAqIDIgOiAwO1xuICBjb25zdCBtaW51dGVzID0gdGltZSA/ICh0aW1lID4+IDUpICYgMHgzRiA6IDA7XG4gIGNvbnN0IGhvdXJzID0gdGltZSA/ICh0aW1lID4+IDExKTogMDtcblxuICByZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEMoeWVhciwgbW9udGgtMSwgZGF5LCBob3VycywgbWludXRlcywgc2Vjb25kcykpO1xufTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/parseDateTime.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/parseExtraField.js":
/*!******************************************************!*\
  !*** ./node_modules/unzipper/lib/parseExtraField.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var binary = __webpack_require__(/*! binary */ \"(rsc)/./node_modules/binary/index.js\");\n\nmodule.exports = function(extraField, vars) {\n  var extra;\n  // Find the ZIP64 header, if present.\n  while(!extra && extraField && extraField.length) {\n    var candidateExtra = binary.parse(extraField)\n      .word16lu('signature')\n      .word16lu('partsize')\n      .word64lu('uncompressedSize')\n      .word64lu('compressedSize')\n      .word64lu('offset')\n      .word64lu('disknum')\n      .vars;\n\n    if(candidateExtra.signature === 0x0001) {\n      extra = candidateExtra;\n    } else {\n      // Advance the buffer to the next part.\n      // The total size of this part is the 4 byte header + partsize.\n      extraField = extraField.slice(candidateExtra.partsize + 4);\n    }\n  }\n\n  extra = extra || {};\n\n  if (vars.compressedSize === 0xffffffff)\n    vars.compressedSize = extra.compressedSize;\n\n  if (vars.uncompressedSize  === 0xffffffff)\n    vars.uncompressedSize= extra.uncompressedSize;\n\n  if (vars.offsetToLocalFileHeader === 0xffffffff)\n    vars.offsetToLocalFileHeader= extra.offset;\n\n  return extra;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL3BhcnNlRXh0cmFGaWVsZC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1CQUFPLENBQUMsb0RBQVE7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxDa2hhZGFyXFxEb3dubG9hZHNcXEFJX0Jhc2VsaW5lX01hcFxcbm9kZV9tb2R1bGVzXFx1bnppcHBlclxcbGliXFxwYXJzZUV4dHJhRmllbGQuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJpbmFyeSA9IHJlcXVpcmUoJ2JpbmFyeScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGV4dHJhRmllbGQsIHZhcnMpIHtcbiAgdmFyIGV4dHJhO1xuICAvLyBGaW5kIHRoZSBaSVA2NCBoZWFkZXIsIGlmIHByZXNlbnQuXG4gIHdoaWxlKCFleHRyYSAmJiBleHRyYUZpZWxkICYmIGV4dHJhRmllbGQubGVuZ3RoKSB7XG4gICAgdmFyIGNhbmRpZGF0ZUV4dHJhID0gYmluYXJ5LnBhcnNlKGV4dHJhRmllbGQpXG4gICAgICAud29yZDE2bHUoJ3NpZ25hdHVyZScpXG4gICAgICAud29yZDE2bHUoJ3BhcnRzaXplJylcbiAgICAgIC53b3JkNjRsdSgndW5jb21wcmVzc2VkU2l6ZScpXG4gICAgICAud29yZDY0bHUoJ2NvbXByZXNzZWRTaXplJylcbiAgICAgIC53b3JkNjRsdSgnb2Zmc2V0JylcbiAgICAgIC53b3JkNjRsdSgnZGlza251bScpXG4gICAgICAudmFycztcblxuICAgIGlmKGNhbmRpZGF0ZUV4dHJhLnNpZ25hdHVyZSA9PT0gMHgwMDAxKSB7XG4gICAgICBleHRyYSA9IGNhbmRpZGF0ZUV4dHJhO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBBZHZhbmNlIHRoZSBidWZmZXIgdG8gdGhlIG5leHQgcGFydC5cbiAgICAgIC8vIFRoZSB0b3RhbCBzaXplIG9mIHRoaXMgcGFydCBpcyB0aGUgNCBieXRlIGhlYWRlciArIHBhcnRzaXplLlxuICAgICAgZXh0cmFGaWVsZCA9IGV4dHJhRmllbGQuc2xpY2UoY2FuZGlkYXRlRXh0cmEucGFydHNpemUgKyA0KTtcbiAgICB9XG4gIH1cblxuICBleHRyYSA9IGV4dHJhIHx8IHt9O1xuXG4gIGlmICh2YXJzLmNvbXByZXNzZWRTaXplID09PSAweGZmZmZmZmZmKVxuICAgIHZhcnMuY29tcHJlc3NlZFNpemUgPSBleHRyYS5jb21wcmVzc2VkU2l6ZTtcblxuICBpZiAodmFycy51bmNvbXByZXNzZWRTaXplICA9PT0gMHhmZmZmZmZmZilcbiAgICB2YXJzLnVuY29tcHJlc3NlZFNpemU9IGV4dHJhLnVuY29tcHJlc3NlZFNpemU7XG5cbiAgaWYgKHZhcnMub2Zmc2V0VG9Mb2NhbEZpbGVIZWFkZXIgPT09IDB4ZmZmZmZmZmYpXG4gICAgdmFycy5vZmZzZXRUb0xvY2FsRmlsZUhlYWRlcj0gZXh0cmEub2Zmc2V0O1xuXG4gIHJldHVybiBleHRyYTtcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/parseExtraField.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/lib/parseOne.js":
/*!***********************************************!*\
  !*** ./node_modules/unzipper/lib/parseOne.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Stream = __webpack_require__(/*! stream */ \"stream\");\nvar Parse = __webpack_require__(/*! ./parse */ \"(rsc)/./node_modules/unzipper/lib/parse.js\");\nvar duplexer2 = __webpack_require__(/*! duplexer2 */ \"(rsc)/./node_modules/duplexer2/index.js\");\nvar BufferStream = __webpack_require__(/*! ./BufferStream */ \"(rsc)/./node_modules/unzipper/lib/BufferStream.js\");\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\");\n\nfunction parseOne(match,opts) {\n  var inStream = Stream.PassThrough({objectMode:true});\n  var outStream = Stream.PassThrough();\n  var transform = Stream.Transform({objectMode:true});\n  var re = match instanceof RegExp ? match : (match && new RegExp(match));\n  var found;\n\n  transform._transform = function(entry,e,cb) {\n    if (found || (re && !re.exec(entry.path))) {\n      entry.autodrain();\n      return cb();\n    } else {\n      found = true;\n      out.emit('entry',entry);\n      entry.on('error',function(e) {\n        outStream.emit('error',e);\n      });\n      entry.pipe(outStream)\n        .on('error',function(err) {\n          cb(err);\n        })\n        .on('finish',function(d) {\n          cb(null,d);\n        });\n    }\n  };\n\n  inStream.pipe(Parse(opts))\n    .on('error',function(err) {\n      outStream.emit('error',err);\n    })\n    .pipe(transform)\n    .on('error',Object)  // Silence error as its already addressed in transform\n    .on('finish',function() {\n      if (!found)\n        outStream.emit('error',new Error('PATTERN_NOT_FOUND'));\n      else\n        outStream.end();\n    });\n\n  var out = duplexer2(inStream,outStream);\n  out.buffer = function() {\n    return BufferStream(outStream);\n  };\n\n  return out;\n}\n\nmodule.exports = parseOne;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvbGliL3BhcnNlT25lLmpzIiwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxzQkFBUTtBQUM3QixZQUFZLG1CQUFPLENBQUMsMkRBQVM7QUFDN0IsZ0JBQWdCLG1CQUFPLENBQUMsMERBQVc7QUFDbkMsbUJBQW1CLG1CQUFPLENBQUMseUVBQWdCOztBQUUzQztBQUNBO0FBQ0EsV0FBVyxtQkFBTyxDQUFDLHlFQUFpQjs7QUFFcEM7QUFDQSxxQ0FBcUMsZ0JBQWdCO0FBQ3JEO0FBQ0Esb0NBQW9DLGdCQUFnQjtBQUNwRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXENraGFkYXJcXERvd25sb2Fkc1xcQUlfQmFzZWxpbmVfTWFwXFxub2RlX21vZHVsZXNcXHVuemlwcGVyXFxsaWJcXHBhcnNlT25lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBTdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKTtcbnZhciBQYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UnKTtcbnZhciBkdXBsZXhlcjIgPSByZXF1aXJlKCdkdXBsZXhlcjInKTtcbnZhciBCdWZmZXJTdHJlYW0gPSByZXF1aXJlKCcuL0J1ZmZlclN0cmVhbScpO1xuXG4vLyBCYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBmb3Igbm9kZSB2ZXJzaW9ucyA8IDhcbmlmICghU3RyZWFtLldyaXRhYmxlIHx8ICFTdHJlYW0uV3JpdGFibGUucHJvdG90eXBlLmRlc3Ryb3kpXG4gIFN0cmVhbSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbScpO1xuXG5mdW5jdGlvbiBwYXJzZU9uZShtYXRjaCxvcHRzKSB7XG4gIHZhciBpblN0cmVhbSA9IFN0cmVhbS5QYXNzVGhyb3VnaCh7b2JqZWN0TW9kZTp0cnVlfSk7XG4gIHZhciBvdXRTdHJlYW0gPSBTdHJlYW0uUGFzc1Rocm91Z2goKTtcbiAgdmFyIHRyYW5zZm9ybSA9IFN0cmVhbS5UcmFuc2Zvcm0oe29iamVjdE1vZGU6dHJ1ZX0pO1xuICB2YXIgcmUgPSBtYXRjaCBpbnN0YW5jZW9mIFJlZ0V4cCA/IG1hdGNoIDogKG1hdGNoICYmIG5ldyBSZWdFeHAobWF0Y2gpKTtcbiAgdmFyIGZvdW5kO1xuXG4gIHRyYW5zZm9ybS5fdHJhbnNmb3JtID0gZnVuY3Rpb24oZW50cnksZSxjYikge1xuICAgIGlmIChmb3VuZCB8fCAocmUgJiYgIXJlLmV4ZWMoZW50cnkucGF0aCkpKSB7XG4gICAgICBlbnRyeS5hdXRvZHJhaW4oKTtcbiAgICAgIHJldHVybiBjYigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3VuZCA9IHRydWU7XG4gICAgICBvdXQuZW1pdCgnZW50cnknLGVudHJ5KTtcbiAgICAgIGVudHJ5Lm9uKCdlcnJvcicsZnVuY3Rpb24oZSkge1xuICAgICAgICBvdXRTdHJlYW0uZW1pdCgnZXJyb3InLGUpO1xuICAgICAgfSk7XG4gICAgICBlbnRyeS5waXBlKG91dFN0cmVhbSlcbiAgICAgICAgLm9uKCdlcnJvcicsZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgY2IoZXJyKTtcbiAgICAgICAgfSlcbiAgICAgICAgLm9uKCdmaW5pc2gnLGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICBjYihudWxsLGQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgaW5TdHJlYW0ucGlwZShQYXJzZShvcHRzKSlcbiAgICAub24oJ2Vycm9yJyxmdW5jdGlvbihlcnIpIHtcbiAgICAgIG91dFN0cmVhbS5lbWl0KCdlcnJvcicsZXJyKTtcbiAgICB9KVxuICAgIC5waXBlKHRyYW5zZm9ybSlcbiAgICAub24oJ2Vycm9yJyxPYmplY3QpICAvLyBTaWxlbmNlIGVycm9yIGFzIGl0cyBhbHJlYWR5IGFkZHJlc3NlZCBpbiB0cmFuc2Zvcm1cbiAgICAub24oJ2ZpbmlzaCcsZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIWZvdW5kKVxuICAgICAgICBvdXRTdHJlYW0uZW1pdCgnZXJyb3InLG5ldyBFcnJvcignUEFUVEVSTl9OT1RfRk9VTkQnKSk7XG4gICAgICBlbHNlXG4gICAgICAgIG91dFN0cmVhbS5lbmQoKTtcbiAgICB9KTtcblxuICB2YXIgb3V0ID0gZHVwbGV4ZXIyKGluU3RyZWFtLG91dFN0cmVhbSk7XG4gIG91dC5idWZmZXIgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gQnVmZmVyU3RyZWFtKG91dFN0cmVhbSk7XG4gIH07XG5cbiAgcmV0dXJuIG91dDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwYXJzZU9uZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/lib/parseOne.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/unzipper/unzip.js":
/*!****************************************!*\
  !*** ./node_modules/unzipper/unzip.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Polyfills for node 0.8\n__webpack_require__(/*! listenercount */ \"(rsc)/./node_modules/listenercount/index.js\");\n__webpack_require__(/*! buffer-indexof-polyfill */ \"(rsc)/./node_modules/buffer-indexof-polyfill/index.js\");\n__webpack_require__(/*! setimmediate */ \"(rsc)/./node_modules/next/dist/compiled/setimmediate/setImmediate.js\");\n\n\nexports.Parse = __webpack_require__(/*! ./lib/parse */ \"(rsc)/./node_modules/unzipper/lib/parse.js\");\nexports.ParseOne = __webpack_require__(/*! ./lib/parseOne */ \"(rsc)/./node_modules/unzipper/lib/parseOne.js\");\nexports.Extract = __webpack_require__(/*! ./lib/extract */ \"(rsc)/./node_modules/unzipper/lib/extract.js\");\nexports.Open = __webpack_require__(/*! ./lib/Open */ \"(rsc)/./node_modules/unzipper/lib/Open/index.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdW56aXBwZXIvdW56aXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLG1CQUFPLENBQUMsa0VBQWU7QUFDdkIsbUJBQU8sQ0FBQyxzRkFBeUI7QUFDakMsbUJBQU8sQ0FBQywwRkFBYzs7O0FBR3RCLG9HQUFzQztBQUN0Qyw2R0FBNEM7QUFDNUMsMEdBQTBDO0FBQzFDLHVHQUFvQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxDa2hhZGFyXFxEb3dubG9hZHNcXEFJX0Jhc2VsaW5lX01hcFxcbm9kZV9tb2R1bGVzXFx1bnppcHBlclxcdW56aXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gUG9seWZpbGxzIGZvciBub2RlIDAuOFxucmVxdWlyZSgnbGlzdGVuZXJjb3VudCcpO1xucmVxdWlyZSgnYnVmZmVyLWluZGV4b2YtcG9seWZpbGwnKTtcbnJlcXVpcmUoJ3NldGltbWVkaWF0ZScpO1xuXG5cbmV4cG9ydHMuUGFyc2UgPSByZXF1aXJlKCcuL2xpYi9wYXJzZScpO1xuZXhwb3J0cy5QYXJzZU9uZSA9IHJlcXVpcmUoJy4vbGliL3BhcnNlT25lJyk7XG5leHBvcnRzLkV4dHJhY3QgPSByZXF1aXJlKCcuL2xpYi9leHRyYWN0Jyk7XG5leHBvcnRzLk9wZW4gPSByZXF1aXJlKCcuL2xpYi9PcGVuJyk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/unzipper/unzip.js\n");

/***/ })

};
;